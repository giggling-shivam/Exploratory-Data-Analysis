{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "82ccd94d",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:07.113974Z",
     "iopub.status.busy": "2024-06-02T10:33:07.113251Z",
     "iopub.status.idle": "2024-06-02T10:33:07.820452Z",
     "shell.execute_reply": "2024-06-02T10:33:07.819348Z"
    },
    "papermill": {
     "duration": 0.72971,
     "end_time": "2024-06-02T10:33:07.822791",
     "exception": false,
     "start_time": "2024-06-02T10:33:07.093081",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/student-attitude-and-behavior/Student Attitude and Behavior.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ff3fc1a7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:07.862477Z",
     "iopub.status.busy": "2024-06-02T10:33:07.862039Z",
     "iopub.status.idle": "2024-06-02T10:33:07.910407Z",
     "shell.execute_reply": "2024-06-02T10:33:07.909423Z"
    },
    "papermill": {
     "duration": 0.071297,
     "end_time": "2024-06-02T10:33:07.912821",
     "exception": false,
     "start_time": "2024-06-02T10:33:07.841524",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Certification Course</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Department</th>\n",
       "      <th>Height(CM)</th>\n",
       "      <th>Weight(KG)</th>\n",
       "      <th>10th Mark</th>\n",
       "      <th>12th Mark</th>\n",
       "      <th>college mark</th>\n",
       "      <th>hobbies</th>\n",
       "      <th>daily studing time</th>\n",
       "      <th>prefer to study in</th>\n",
       "      <th>salary expectation</th>\n",
       "      <th>Do you like your degree?</th>\n",
       "      <th>willingness to pursue a career based on their degree</th>\n",
       "      <th>social medai &amp; video</th>\n",
       "      <th>Travelling Time</th>\n",
       "      <th>Stress Level</th>\n",
       "      <th>Financial Status</th>\n",
       "      <th>part-time job</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>No</td>\n",
       "      <td>Male</td>\n",
       "      <td>BCA</td>\n",
       "      <td>100.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>79.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>Video Games</td>\n",
       "      <td>0 - 30 minute</td>\n",
       "      <td>Morning</td>\n",
       "      <td>40000</td>\n",
       "      <td>No</td>\n",
       "      <td>50%</td>\n",
       "      <td>1.30 - 2 hour</td>\n",
       "      <td>30 - 60 minutes</td>\n",
       "      <td>Bad</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>No</td>\n",
       "      <td>Female</td>\n",
       "      <td>BCA</td>\n",
       "      <td>90.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>Cinema</td>\n",
       "      <td>30 - 60 minute</td>\n",
       "      <td>Morning</td>\n",
       "      <td>15000</td>\n",
       "      <td>Yes</td>\n",
       "      <td>75%</td>\n",
       "      <td>1 - 1.30 hour</td>\n",
       "      <td>0 - 30 minutes</td>\n",
       "      <td>Bad</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Male</td>\n",
       "      <td>BCA</td>\n",
       "      <td>159.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>61.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>Cinema</td>\n",
       "      <td>1 - 2 Hour</td>\n",
       "      <td>Anytime</td>\n",
       "      <td>13000</td>\n",
       "      <td>Yes</td>\n",
       "      <td>50%</td>\n",
       "      <td>More than 2 hour</td>\n",
       "      <td>30 - 60 minutes</td>\n",
       "      <td>Awful</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Female</td>\n",
       "      <td>BCA</td>\n",
       "      <td>147.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>59.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>Reading books</td>\n",
       "      <td>1 - 2 Hour</td>\n",
       "      <td>Anytime</td>\n",
       "      <td>1500000</td>\n",
       "      <td>No</td>\n",
       "      <td>50%</td>\n",
       "      <td>1.30 - 2 hour</td>\n",
       "      <td>0 - 30 minutes</td>\n",
       "      <td>Bad</td>\n",
       "      <td>good</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>No</td>\n",
       "      <td>Male</td>\n",
       "      <td>BCA</td>\n",
       "      <td>170.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>Video Games</td>\n",
       "      <td>30 - 60 minute</td>\n",
       "      <td>Morning</td>\n",
       "      <td>50000</td>\n",
       "      <td>Yes</td>\n",
       "      <td>25%</td>\n",
       "      <td>1.30 - 2 hour</td>\n",
       "      <td>30 - 60 minutes</td>\n",
       "      <td>Good</td>\n",
       "      <td>good</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Certification Course  Gender Department  Height(CM)  Weight(KG)  10th Mark  \\\n",
       "0                   No    Male        BCA       100.0        58.0       79.0   \n",
       "1                   No  Female        BCA        90.0        40.0       70.0   \n",
       "2                  Yes    Male        BCA       159.0        78.0       71.0   \n",
       "3                  Yes  Female        BCA       147.0        20.0       70.0   \n",
       "4                   No    Male        BCA       170.0        54.0       40.0   \n",
       "\n",
       "   12th Mark  college mark        hobbies daily studing time  \\\n",
       "0       64.0          80.0    Video Games      0 - 30 minute   \n",
       "1       80.0          70.0         Cinema     30 - 60 minute   \n",
       "2       61.0          55.0         Cinema         1 - 2 Hour   \n",
       "3       59.0          58.0  Reading books         1 - 2 Hour   \n",
       "4       65.0          30.0    Video Games     30 - 60 minute   \n",
       "\n",
       "  prefer to study in  salary expectation Do you like your degree?  \\\n",
       "0            Morning               40000                       No   \n",
       "1            Morning               15000                      Yes   \n",
       "2            Anytime               13000                      Yes   \n",
       "3            Anytime             1500000                       No   \n",
       "4            Morning               50000                      Yes   \n",
       "\n",
       "  willingness to pursue a career based on their degree   social medai & video  \\\n",
       "0                                                50%            1.30 - 2 hour   \n",
       "1                                                75%            1 - 1.30 hour   \n",
       "2                                                50%         More than 2 hour   \n",
       "3                                                50%            1.30 - 2 hour   \n",
       "4                                                25%            1.30 - 2 hour   \n",
       "\n",
       "  Travelling Time  Stress Level  Financial Status part-time job  \n",
       "0  30 - 60 minutes           Bad              Bad            No  \n",
       "1   0 - 30 minutes           Bad              Bad            No  \n",
       "2  30 - 60 minutes         Awful              Bad            No  \n",
       "3   0 - 30 minutes           Bad             good            No  \n",
       "4  30 - 60 minutes          Good             good            No  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv(\"/kaggle/input/student-attitude-and-behavior/Student Attitude and Behavior.csv\")\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1379d3fb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:07.952481Z",
     "iopub.status.busy": "2024-06-02T10:33:07.952114Z",
     "iopub.status.idle": "2024-06-02T10:33:07.958002Z",
     "shell.execute_reply": "2024-06-02T10:33:07.957168Z"
    },
    "papermill": {
     "duration": 0.027421,
     "end_time": "2024-06-02T10:33:07.959919",
     "exception": false,
     "start_time": "2024-06-02T10:33:07.932498",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Certification Course', 'Gender', 'Department', 'Height(CM)',\n",
       "       'Weight(KG)', '10th Mark', '12th Mark', 'college mark', 'hobbies',\n",
       "       'daily studing time', 'prefer to study in', 'salary expectation',\n",
       "       'Do you like your degree?',\n",
       "       'willingness to pursue a career based on their degree  ',\n",
       "       'social medai & video', 'Travelling Time ', 'Stress Level ',\n",
       "       'Financial Status', 'part-time job'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b28af13",
   "metadata": {
    "papermill": {
     "duration": 0.019683,
     "end_time": "2024-06-02T10:33:07.998522",
     "exception": false,
     "start_time": "2024-06-02T10:33:07.978839",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### columns fixing\n",
    "\n",
    "- you see a lot of columns names have unnecessary spaces at the end"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "856591ad",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:08.036994Z",
     "iopub.status.busy": "2024-06-02T10:33:08.036742Z",
     "iopub.status.idle": "2024-06-02T10:33:08.043056Z",
     "shell.execute_reply": "2024-06-02T10:33:08.042102Z"
    },
    "papermill": {
     "duration": 0.027685,
     "end_time": "2024-06-02T10:33:08.044861",
     "exception": false,
     "start_time": "2024-06-02T10:33:08.017176",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Certification Course', 'Gender', 'Department', 'Height(CM)',\n",
       "       'Weight(KG)', '10th Mark', '12th Mark', 'college mark', 'hobbies',\n",
       "       'daily studing time', 'prefer to study in', 'salary expectation',\n",
       "       'Do you like your degree?',\n",
       "       'willingness to pursue a career based on their degree',\n",
       "       'social medai & video', 'Travelling Time', 'Stress Level',\n",
       "       'Financial Status', 'part-time job'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns = [column.strip() for column in df.columns]\n",
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e787cfee",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:08.083412Z",
     "iopub.status.busy": "2024-06-02T10:33:08.083175Z",
     "iopub.status.idle": "2024-06-02T10:33:08.091322Z",
     "shell.execute_reply": "2024-06-02T10:33:08.090414Z"
    },
    "papermill": {
     "duration": 0.029592,
     "end_time": "2024-06-02T10:33:08.093402",
     "exception": false,
     "start_time": "2024-06-02T10:33:08.063810",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Certification Course                                    0\n",
       "Gender                                                  0\n",
       "Department                                              0\n",
       "Height(CM)                                              0\n",
       "Weight(KG)                                              0\n",
       "10th Mark                                               0\n",
       "12th Mark                                               0\n",
       "college mark                                            0\n",
       "hobbies                                                 0\n",
       "daily studing time                                      0\n",
       "prefer to study in                                      0\n",
       "salary expectation                                      0\n",
       "Do you like your degree?                                0\n",
       "willingness to pursue a career based on their degree    0\n",
       "social medai & video                                    0\n",
       "Travelling Time                                         0\n",
       "Stress Level                                            0\n",
       "Financial Status                                        0\n",
       "part-time job                                           0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#checking null values\n",
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4b9dfe96",
   "metadata": {
    "papermill": {
     "duration": 0.018701,
     "end_time": "2024-06-02T10:33:08.132173",
     "exception": false,
     "start_time": "2024-06-02T10:33:08.113472",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "there are no null values in dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "76b35758",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:08.171056Z",
     "iopub.status.busy": "2024-06-02T10:33:08.170788Z",
     "iopub.status.idle": "2024-06-02T10:33:08.196101Z",
     "shell.execute_reply": "2024-06-02T10:33:08.195286Z"
    },
    "papermill": {
     "duration": 0.046878,
     "end_time": "2024-06-02T10:33:08.197883",
     "exception": false,
     "start_time": "2024-06-02T10:33:08.151005",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Height(CM)</th>\n",
       "      <th>Weight(KG)</th>\n",
       "      <th>10th Mark</th>\n",
       "      <th>12th Mark</th>\n",
       "      <th>college mark</th>\n",
       "      <th>salary expectation</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>235.000000</td>\n",
       "      <td>235.000000</td>\n",
       "      <td>235.000000</td>\n",
       "      <td>235.000000</td>\n",
       "      <td>235.000000</td>\n",
       "      <td>2.350000e+02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>157.402128</td>\n",
       "      <td>60.803830</td>\n",
       "      <td>76.848511</td>\n",
       "      <td>68.775872</td>\n",
       "      <td>70.660553</td>\n",
       "      <td>3.248168e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>21.510805</td>\n",
       "      <td>14.895844</td>\n",
       "      <td>13.047560</td>\n",
       "      <td>11.018192</td>\n",
       "      <td>15.727446</td>\n",
       "      <td>1.113146e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>4.500000</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>7.400000</td>\n",
       "      <td>45.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>152.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>70.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>1.500000e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>160.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>69.000000</td>\n",
       "      <td>70.000000</td>\n",
       "      <td>2.000000e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>170.000000</td>\n",
       "      <td>70.000000</td>\n",
       "      <td>86.250000</td>\n",
       "      <td>76.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>2.500000e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>192.000000</td>\n",
       "      <td>106.000000</td>\n",
       "      <td>98.000000</td>\n",
       "      <td>94.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>1.500000e+06</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Height(CM)  Weight(KG)   10th Mark   12th Mark  college mark  \\\n",
       "count  235.000000  235.000000  235.000000  235.000000    235.000000   \n",
       "mean   157.402128   60.803830   76.848511   68.775872     70.660553   \n",
       "std     21.510805   14.895844   13.047560   11.018192     15.727446   \n",
       "min      4.500000   20.000000    7.400000   45.000000      1.000000   \n",
       "25%    152.000000   50.000000   70.000000   60.000000     60.000000   \n",
       "50%    160.000000   60.000000   80.000000   69.000000     70.000000   \n",
       "75%    170.000000   70.000000   86.250000   76.000000     80.000000   \n",
       "max    192.000000  106.000000   98.000000   94.000000    100.000000   \n",
       "\n",
       "       salary expectation  \n",
       "count        2.350000e+02  \n",
       "mean         3.248168e+04  \n",
       "std          1.113146e+05  \n",
       "min          0.000000e+00  \n",
       "25%          1.500000e+04  \n",
       "50%          2.000000e+04  \n",
       "75%          2.500000e+04  \n",
       "max          1.500000e+06  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0cd21d41",
   "metadata": {
    "papermill": {
     "duration": 0.019109,
     "end_time": "2024-06-02T10:33:08.237708",
     "exception": false,
     "start_time": "2024-06-02T10:33:08.218599",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "seems like there are no outliers too"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5d6b620d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:08.277460Z",
     "iopub.status.busy": "2024-06-02T10:33:08.277154Z",
     "iopub.status.idle": "2024-06-02T10:33:09.514805Z",
     "shell.execute_reply": "2024-06-02T10:33:09.513916Z"
    },
    "papermill": {
     "duration": 1.259522,
     "end_time": "2024-06-02T10:33:09.516856",
     "exception": false,
     "start_time": "2024-06-02T10:33:08.257334",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "plt.figure(figsize=[12,2])\n",
    "sns.boxplot(x= df['salary expectation'], orient='v')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c80e0470",
   "metadata": {
    "papermill": {
     "duration": 0.019492,
     "end_time": "2024-06-02T10:33:09.556699",
     "exception": false,
     "start_time": "2024-06-02T10:33:09.537207",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "'Expected salary' is having certain outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "465b8832",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:09.596585Z",
     "iopub.status.busy": "2024-06-02T10:33:09.596259Z",
     "iopub.status.idle": "2024-06-02T10:33:09.605457Z",
     "shell.execute_reply": "2024-06-02T10:33:09.604608Z"
    },
    "papermill": {
     "duration": 0.031115,
     "end_time": "2024-06-02T10:33:09.607293",
     "exception": false,
     "start_time": "2024-06-02T10:33:09.576178",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.25     15000.0\n",
       "0.50     20000.0\n",
       "0.75     25000.0\n",
       "0.95     50000.0\n",
       "0.99    370800.0\n",
       "Name: salary expectation, dtype: float64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['salary expectation'].quantile([0.25,0.5,0.75,0.95, 0.99])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "0f4f39b9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:09.647041Z",
     "iopub.status.busy": "2024-06-02T10:33:09.646773Z",
     "iopub.status.idle": "2024-06-02T10:33:09.652342Z",
     "shell.execute_reply": "2024-06-02T10:33:09.651397Z"
    },
    "papermill": {
     "duration": 0.027727,
     "end_time": "2024-06-02T10:33:09.654354",
     "exception": false,
     "start_time": "2024-06-02T10:33:09.626627",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1500000"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['salary expectation'].max()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "85e705ca",
   "metadata": {
    "papermill": {
     "duration": 0.019375,
     "end_time": "2024-06-02T10:33:09.693230",
     "exception": false,
     "start_time": "2024-06-02T10:33:09.673855",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "the difference between 99% value and max is almost 5 times. so, there is an outlier in this column"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "27e1e810",
   "metadata": {
    "papermill": {
     "duration": 0.019321,
     "end_time": "2024-06-02T10:33:09.732205",
     "exception": false,
     "start_time": "2024-06-02T10:33:09.712884",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Standarizing the Values of Height, social medai & video and daily studing time(hrs) columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "91d56b34",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:09.772766Z",
     "iopub.status.busy": "2024-06-02T10:33:09.772489Z",
     "iopub.status.idle": "2024-06-02T10:33:09.868584Z",
     "shell.execute_reply": "2024-06-02T10:33:09.867681Z"
    },
    "papermill": {
     "duration": 0.118583,
     "end_time": "2024-06-02T10:33:09.870422",
     "exception": false,
     "start_time": "2024-06-02T10:33:09.751839",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Certification Course</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Department</th>\n",
       "      <th>Weight(KG)</th>\n",
       "      <th>10th Mark</th>\n",
       "      <th>12th Mark</th>\n",
       "      <th>college mark</th>\n",
       "      <th>hobbies</th>\n",
       "      <th>prefer to study in</th>\n",
       "      <th>salary expectation</th>\n",
       "      <th>Do you like your degree?</th>\n",
       "      <th>willingness to pursue a career based on their degree</th>\n",
       "      <th>Stress Level</th>\n",
       "      <th>Financial Status</th>\n",
       "      <th>part-time job</th>\n",
       "      <th>Height(M)</th>\n",
       "      <th>daily studing time(hrs)</th>\n",
       "      <th>Travelling Time(hrs)</th>\n",
       "      <th>social medai &amp; video(hrs)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>No</td>\n",
       "      <td>Male</td>\n",
       "      <td>BCA</td>\n",
       "      <td>58.0</td>\n",
       "      <td>79.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>Video Games</td>\n",
       "      <td>Morning</td>\n",
       "      <td>40000</td>\n",
       "      <td>No</td>\n",
       "      <td>50%</td>\n",
       "      <td>Bad</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>1.30 - 2 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>No</td>\n",
       "      <td>Female</td>\n",
       "      <td>BCA</td>\n",
       "      <td>40.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>Cinema</td>\n",
       "      <td>Morning</td>\n",
       "      <td>15000</td>\n",
       "      <td>Yes</td>\n",
       "      <td>75%</td>\n",
       "      <td>Bad</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "      <td>0.90</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>1 - 1.30 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Male</td>\n",
       "      <td>BCA</td>\n",
       "      <td>78.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>61.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>Cinema</td>\n",
       "      <td>Anytime</td>\n",
       "      <td>13000</td>\n",
       "      <td>Yes</td>\n",
       "      <td>50%</td>\n",
       "      <td>Awful</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "      <td>1.59</td>\n",
       "      <td>1 - 2 Hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>More than 2 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Female</td>\n",
       "      <td>BCA</td>\n",
       "      <td>20.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>59.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>Reading books</td>\n",
       "      <td>Anytime</td>\n",
       "      <td>1500000</td>\n",
       "      <td>No</td>\n",
       "      <td>50%</td>\n",
       "      <td>Bad</td>\n",
       "      <td>good</td>\n",
       "      <td>No</td>\n",
       "      <td>1.47</td>\n",
       "      <td>1 - 2 Hour</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>1.30 - 2 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>No</td>\n",
       "      <td>Male</td>\n",
       "      <td>BCA</td>\n",
       "      <td>54.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>Video Games</td>\n",
       "      <td>Morning</td>\n",
       "      <td>50000</td>\n",
       "      <td>Yes</td>\n",
       "      <td>25%</td>\n",
       "      <td>Good</td>\n",
       "      <td>good</td>\n",
       "      <td>No</td>\n",
       "      <td>1.70</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>1.30 - 2 hour</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Certification Course  Gender Department  Weight(KG)  10th Mark  12th Mark  \\\n",
       "0                   No    Male        BCA        58.0       79.0       64.0   \n",
       "1                   No  Female        BCA        40.0       70.0       80.0   \n",
       "2                  Yes    Male        BCA        78.0       71.0       61.0   \n",
       "3                  Yes  Female        BCA        20.0       70.0       59.0   \n",
       "4                   No    Male        BCA        54.0       40.0       65.0   \n",
       "\n",
       "   college mark        hobbies prefer to study in  salary expectation  \\\n",
       "0          80.0    Video Games            Morning               40000   \n",
       "1          70.0         Cinema            Morning               15000   \n",
       "2          55.0         Cinema            Anytime               13000   \n",
       "3          58.0  Reading books            Anytime             1500000   \n",
       "4          30.0    Video Games            Morning               50000   \n",
       "\n",
       "  Do you like your degree?  \\\n",
       "0                       No   \n",
       "1                      Yes   \n",
       "2                      Yes   \n",
       "3                       No   \n",
       "4                      Yes   \n",
       "\n",
       "  willingness to pursue a career based on their degree Stress Level  \\\n",
       "0                                                50%            Bad   \n",
       "1                                                75%            Bad   \n",
       "2                                                50%          Awful   \n",
       "3                                                50%            Bad   \n",
       "4                                                25%           Good   \n",
       "\n",
       "  Financial Status part-time job  Height(M) daily studing time(hrs)  \\\n",
       "0              Bad            No       1.00          0.0 - 0.5 hour   \n",
       "1              Bad            No       0.90          0.5 - 1.0 hour   \n",
       "2              Bad            No       1.59              1 - 2 Hour   \n",
       "3             good            No       1.47              1 - 2 Hour   \n",
       "4             good            No       1.70          0.5 - 1.0 hour   \n",
       "\n",
       "  Travelling Time(hrs) social medai & video(hrs)  \n",
       "0       0.5 - 1.0 hour             1.30 - 2 hour  \n",
       "1       0.0 - 0.5 hour             1 - 1.30 hour  \n",
       "2       0.5 - 1.0 hour          More than 2 hour  \n",
       "3       0.0 - 0.5 hour             1.30 - 2 hour  \n",
       "4       0.5 - 1.0 hour             1.30 - 2 hour  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Height(M)'] = df['Height(CM)'] / 100\n",
    "\n",
    "df['social medai & video'] = df['social medai & video'].replace('0 Minute', 'less than 0 hour')\n",
    "\n",
    "df['daily studing time(hrs)'] = df['daily studing time'].apply(lambda x: (str(int(x.split(\" \")[0])/60) + \" - \" + str(int(x.split(\" \")[2])/60) + ' hour') if x.split(\" \")[3] == 'minute' else x)\n",
    "df['Travelling Time(hrs)'] = df['Travelling Time'].apply(lambda x: (str(int(x.split(\" \")[0])/60) + \" - \" + str(int(x.split(\" \")[2])/60) + ' hour') if x.split(\" \")[3] == 'minutes' else x)\n",
    "df['social medai & video(hrs)'] = df['social medai & video'].apply(lambda x: (str(int(x.split(\" \")[0])/60) + \" - \" + str(int(x.split(\" \")[2])/60) + ' hour') if x.split(\" \")[3] == 'Minute' else x)\n",
    "df.drop(columns=['Height(CM)','daily studing time','social medai & video','Travelling Time'], axis=1, inplace=True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9f53a4b3",
   "metadata": {
    "papermill": {
     "duration": 0.020096,
     "end_time": "2024-06-02T10:33:09.910637",
     "exception": false,
     "start_time": "2024-06-02T10:33:09.890541",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Fixing values in the columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "9aad8693",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:09.951326Z",
     "iopub.status.busy": "2024-06-02T10:33:09.951065Z",
     "iopub.status.idle": "2024-06-02T10:33:09.967294Z",
     "shell.execute_reply": "2024-06-02T10:33:09.966408Z"
    },
    "papermill": {
     "duration": 0.038975,
     "end_time": "2024-06-02T10:33:09.969487",
     "exception": false,
     "start_time": "2024-06-02T10:33:09.930512",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 235 entries, 0 to 234\n",
      "Data columns (total 19 columns):\n",
      " #   Column                                                Non-Null Count  Dtype  \n",
      "---  ------                                                --------------  -----  \n",
      " 0   Certification Course                                  235 non-null    object \n",
      " 1   Gender                                                235 non-null    object \n",
      " 2   Department                                            235 non-null    object \n",
      " 3   Weight(KG)                                            235 non-null    float64\n",
      " 4   10th Mark                                             235 non-null    float64\n",
      " 5   12th Mark                                             235 non-null    float64\n",
      " 6   college mark                                          235 non-null    float64\n",
      " 7   hobbies                                               235 non-null    object \n",
      " 8   prefer to study in                                    235 non-null    object \n",
      " 9   salary expectation                                    235 non-null    int64  \n",
      " 10  Do you like your degree?                              235 non-null    object \n",
      " 11  willingness to pursue a career based on their degree  235 non-null    object \n",
      " 12  Stress Level                                          235 non-null    object \n",
      " 13  Financial Status                                      235 non-null    object \n",
      " 14  part-time job                                         235 non-null    object \n",
      " 15  Height(M)                                             235 non-null    float64\n",
      " 16  daily studing time(hrs)                               235 non-null    object \n",
      " 17  Travelling Time(hrs)                                  235 non-null    object \n",
      " 18  social medai & video(hrs)                             235 non-null    object \n",
      "dtypes: float64(5), int64(1), object(13)\n",
      "memory usage: 35.0+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "378258b4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:10.051877Z",
     "iopub.status.busy": "2024-06-02T10:33:10.051534Z",
     "iopub.status.idle": "2024-06-02T10:33:10.059119Z",
     "shell.execute_reply": "2024-06-02T10:33:10.058239Z"
    },
    "papermill": {
     "duration": 0.071161,
     "end_time": "2024-06-02T10:33:10.061007",
     "exception": false,
     "start_time": "2024-06-02T10:33:09.989846",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([  40000,   15000,   13000, 1500000,   50000,   20000,   25000,\n",
       "         18000,      17,   60000,       0,   30000,   10000,   17000,\n",
       "        100000,    8000,   12000,      21,   35000,   16000,    5000,\n",
       "         12500,   11000,  120000,   45000,   23000,  500000,  700000,\n",
       "            10,      15,      22,     100,     500,    7000])"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['salary expectation'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "17b2c4e9",
   "metadata": {
    "papermill": {
     "duration": 0.020051,
     "end_time": "2024-06-02T10:33:10.103039",
     "exception": false,
     "start_time": "2024-06-02T10:33:10.082988",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We can impute or replace the values by multipying them to 1000 or more to make them consistent with the dataset. But as this data is not significant amount we can make this value as missing or Nan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "f9591bb3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:10.144872Z",
     "iopub.status.busy": "2024-06-02T10:33:10.144296Z",
     "iopub.status.idle": "2024-06-02T10:33:10.149613Z",
     "shell.execute_reply": "2024-06-02T10:33:10.148780Z"
    },
    "papermill": {
     "duration": 0.028301,
     "end_time": "2024-06-02T10:33:10.151521",
     "exception": false,
     "start_time": "2024-06-02T10:33:10.123220",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.loc[df['salary expectation'] < 1000, 'salary expectation'] = np.nan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "5a4c6d58",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:10.193837Z",
     "iopub.status.busy": "2024-06-02T10:33:10.193146Z",
     "iopub.status.idle": "2024-06-02T10:33:10.199864Z",
     "shell.execute_reply": "2024-06-02T10:33:10.199042Z"
    },
    "papermill": {
     "duration": 0.029936,
     "end_time": "2024-06-02T10:33:10.201720",
     "exception": false,
     "start_time": "2024-06-02T10:33:10.171784",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1.   , 0.9  , 1.59 , 1.47 , 1.7  , 1.39 , 1.65 , 1.52 , 1.9  ,\n",
       "       1.5  , 0.99 , 1.58 , 1.6  , 1.56 , 1.53 , 1.62 , 1.09 , 1.54 ,\n",
       "       1.42 , 1.8  , 1.67 , 1.75 , 1.51 , 1.45 , 1.63 , 1.44 , 1.55 ,\n",
       "       1.85 , 0.98 , 1.57 , 1.46 , 1.72 , 1.06 , 1.71 , 1.77 , 1.74 ,\n",
       "       0.045, 1.78 , 1.83 , 1.81 , 1.79 , 1.87 , 1.32 , 1.69 , 1.34 ,\n",
       "       1.2  , 1.82 , 1.48 , 1.3  , 1.4  , 1.92 , 1.73 , 1.49 , 1.68 ,\n",
       "       1.61 , 1.64 ])"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Height(M)'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a4c0f049",
   "metadata": {
    "papermill": {
     "duration": 0.020285,
     "end_time": "2024-06-02T10:33:10.242773",
     "exception": false,
     "start_time": "2024-06-02T10:33:10.222488",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "There is a value 0.045 in Height(M) column, this is not a valid value and needs to be handled."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "9c29c53a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:10.284531Z",
     "iopub.status.busy": "2024-06-02T10:33:10.284235Z",
     "iopub.status.idle": "2024-06-02T10:33:10.289129Z",
     "shell.execute_reply": "2024-06-02T10:33:10.288361Z"
    },
    "papermill": {
     "duration": 0.027929,
     "end_time": "2024-06-02T10:33:10.290988",
     "exception": false,
     "start_time": "2024-06-02T10:33:10.263059",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.loc[df['Height(M)'] == 0.045,'Height(M)'] = np.nan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "56a4760b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:10.333041Z",
     "iopub.status.busy": "2024-06-02T10:33:10.332787Z",
     "iopub.status.idle": "2024-06-02T10:33:10.352883Z",
     "shell.execute_reply": "2024-06-02T10:33:10.351985Z"
    },
    "papermill": {
     "duration": 0.043301,
     "end_time": "2024-06-02T10:33:10.354809",
     "exception": false,
     "start_time": "2024-06-02T10:33:10.311508",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Certification Course</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Department</th>\n",
       "      <th>Weight(KG)</th>\n",
       "      <th>10th Mark</th>\n",
       "      <th>12th Mark</th>\n",
       "      <th>college mark</th>\n",
       "      <th>hobbies</th>\n",
       "      <th>prefer to study in</th>\n",
       "      <th>salary expectation</th>\n",
       "      <th>Do you like your degree?</th>\n",
       "      <th>willingness to pursue a career based on their degree</th>\n",
       "      <th>Stress Level</th>\n",
       "      <th>Financial Status</th>\n",
       "      <th>part-time job</th>\n",
       "      <th>Height(M)</th>\n",
       "      <th>daily studing time(hrs)</th>\n",
       "      <th>Travelling Time(hrs)</th>\n",
       "      <th>social medai &amp; video(hrs)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>No</td>\n",
       "      <td>Male</td>\n",
       "      <td>BCA</td>\n",
       "      <td>58.0</td>\n",
       "      <td>79.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>Video Games</td>\n",
       "      <td>Morning</td>\n",
       "      <td>40000.0</td>\n",
       "      <td>No</td>\n",
       "      <td>50%</td>\n",
       "      <td>Bad</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>1.30 - 2 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>No</td>\n",
       "      <td>Female</td>\n",
       "      <td>BCA</td>\n",
       "      <td>40.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>Cinema</td>\n",
       "      <td>Morning</td>\n",
       "      <td>15000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>75%</td>\n",
       "      <td>Bad</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "      <td>0.90</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>1 - 1.30 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Male</td>\n",
       "      <td>BCA</td>\n",
       "      <td>78.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>61.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>Cinema</td>\n",
       "      <td>Anytime</td>\n",
       "      <td>13000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>50%</td>\n",
       "      <td>Awful</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "      <td>1.59</td>\n",
       "      <td>1 - 2 Hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>More than 2 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Female</td>\n",
       "      <td>BCA</td>\n",
       "      <td>20.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>59.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>Reading books</td>\n",
       "      <td>Anytime</td>\n",
       "      <td>1500000.0</td>\n",
       "      <td>No</td>\n",
       "      <td>50%</td>\n",
       "      <td>Bad</td>\n",
       "      <td>good</td>\n",
       "      <td>No</td>\n",
       "      <td>1.47</td>\n",
       "      <td>1 - 2 Hour</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>1.30 - 2 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>No</td>\n",
       "      <td>Male</td>\n",
       "      <td>BCA</td>\n",
       "      <td>54.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>Video Games</td>\n",
       "      <td>Morning</td>\n",
       "      <td>50000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>25%</td>\n",
       "      <td>Good</td>\n",
       "      <td>good</td>\n",
       "      <td>No</td>\n",
       "      <td>1.70</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>1.30 - 2 hour</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Certification Course  Gender Department  Weight(KG)  10th Mark  12th Mark  \\\n",
       "0                   No    Male        BCA        58.0       79.0       64.0   \n",
       "1                   No  Female        BCA        40.0       70.0       80.0   \n",
       "2                  Yes    Male        BCA        78.0       71.0       61.0   \n",
       "3                  Yes  Female        BCA        20.0       70.0       59.0   \n",
       "4                   No    Male        BCA        54.0       40.0       65.0   \n",
       "\n",
       "   college mark        hobbies prefer to study in  salary expectation  \\\n",
       "0          80.0    Video Games            Morning             40000.0   \n",
       "1          70.0         Cinema            Morning             15000.0   \n",
       "2          55.0         Cinema            Anytime             13000.0   \n",
       "3          58.0  Reading books            Anytime           1500000.0   \n",
       "4          30.0    Video Games            Morning             50000.0   \n",
       "\n",
       "  Do you like your degree?  \\\n",
       "0                       No   \n",
       "1                      Yes   \n",
       "2                      Yes   \n",
       "3                       No   \n",
       "4                      Yes   \n",
       "\n",
       "  willingness to pursue a career based on their degree Stress Level  \\\n",
       "0                                                50%            Bad   \n",
       "1                                                75%            Bad   \n",
       "2                                                50%          Awful   \n",
       "3                                                50%            Bad   \n",
       "4                                                25%           Good   \n",
       "\n",
       "  Financial Status part-time job  Height(M) daily studing time(hrs)  \\\n",
       "0              Bad            No       1.00          0.0 - 0.5 hour   \n",
       "1              Bad            No       0.90          0.5 - 1.0 hour   \n",
       "2              Bad            No       1.59              1 - 2 Hour   \n",
       "3             good            No       1.47              1 - 2 Hour   \n",
       "4             good            No       1.70          0.5 - 1.0 hour   \n",
       "\n",
       "  Travelling Time(hrs) social medai & video(hrs)  \n",
       "0       0.5 - 1.0 hour             1.30 - 2 hour  \n",
       "1       0.0 - 0.5 hour             1 - 1.30 hour  \n",
       "2       0.5 - 1.0 hour          More than 2 hour  \n",
       "3       0.0 - 0.5 hour             1.30 - 2 hour  \n",
       "4       0.5 - 1.0 hour             1.30 - 2 hour  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0df05abd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-25T13:55:26.395211Z",
     "iopub.status.busy": "2024-04-25T13:55:26.394464Z",
     "iopub.status.idle": "2024-04-25T13:55:26.401992Z",
     "shell.execute_reply": "2024-04-25T13:55:26.400637Z",
     "shell.execute_reply.started": "2024-04-25T13:55:26.395171Z"
    },
    "papermill": {
     "duration": 0.020452,
     "end_time": "2024-06-02T10:33:10.396364",
     "exception": false,
     "start_time": "2024-06-02T10:33:10.375912",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Univariate Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "f3fe2a46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:10.439543Z",
     "iopub.status.busy": "2024-06-02T10:33:10.439250Z",
     "iopub.status.idle": "2024-06-02T10:33:10.654713Z",
     "shell.execute_reply": "2024-06-02T10:33:10.653890Z"
    },
    "papermill": {
     "duration": 0.239574,
     "end_time": "2024-06-02T10:33:10.656688",
     "exception": false,
     "start_time": "2024-06-02T10:33:10.417114",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.Gender.value_counts(normalize=True).plot.barh()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "e47de593",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:10.699996Z",
     "iopub.status.busy": "2024-06-02T10:33:10.699736Z",
     "iopub.status.idle": "2024-06-02T10:33:10.841269Z",
     "shell.execute_reply": "2024-06-02T10:33:10.840121Z"
    },
    "papermill": {
     "duration": 0.166599,
     "end_time": "2024-06-02T10:33:10.844560",
     "exception": false,
     "start_time": "2024-06-02T10:33:10.677961",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.Department.value_counts(normalize=True).plot.pie()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d9de2cc5",
   "metadata": {
    "papermill": {
     "duration": 0.034734,
     "end_time": "2024-06-02T10:33:10.924938",
     "exception": false,
     "start_time": "2024-06-02T10:33:10.890204",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### multivariate Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "38362e58",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:10.968873Z",
     "iopub.status.busy": "2024-06-02T10:33:10.968270Z",
     "iopub.status.idle": "2024-06-02T10:33:11.198637Z",
     "shell.execute_reply": "2024-06-02T10:33:11.197763Z"
    },
    "papermill": {
     "duration": 0.254371,
     "end_time": "2024-06-02T10:33:11.200495",
     "exception": false,
     "start_time": "2024-06-02T10:33:10.946124",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# lets see if there is any correlation between 10th and 12th marks\n",
    "\n",
    "df.plot.scatter(x='10th Mark',y='12th Mark')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "ca607c3b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:11.246169Z",
     "iopub.status.busy": "2024-06-02T10:33:11.245508Z",
     "iopub.status.idle": "2024-06-02T10:33:11.257144Z",
     "shell.execute_reply": "2024-06-02T10:33:11.256317Z"
    },
    "papermill": {
     "duration": 0.036229,
     "end_time": "2024-06-02T10:33:11.259006",
     "exception": false,
     "start_time": "2024-06-02T10:33:11.222777",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>10th Mark</th>\n",
       "      <th>12th Mark</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10th Mark</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.473254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12th Mark</th>\n",
       "      <td>0.473254</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           10th Mark  12th Mark\n",
       "10th Mark   1.000000   0.473254\n",
       "12th Mark   0.473254   1.000000"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# quantifying using correlation values\n",
    "\n",
    "df[['10th Mark','12th Mark']].corr()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e78bbbf4",
   "metadata": {
    "papermill": {
     "duration": 0.021798,
     "end_time": "2024-06-02T10:33:11.302815",
     "exception": false,
     "start_time": "2024-06-02T10:33:11.281017",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "there is no such correlation"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f2d85a7f",
   "metadata": {
    "papermill": {
     "duration": 0.021715,
     "end_time": "2024-06-02T10:33:11.346396",
     "exception": false,
     "start_time": "2024-06-02T10:33:11.324681",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "lets see correlation between 'college mark' and 'salary expectation'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "f91525ba",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:11.391295Z",
     "iopub.status.busy": "2024-06-02T10:33:11.391016Z",
     "iopub.status.idle": "2024-06-02T10:33:11.400528Z",
     "shell.execute_reply": "2024-06-02T10:33:11.399677Z"
    },
    "papermill": {
     "duration": 0.034247,
     "end_time": "2024-06-02T10:33:11.402498",
     "exception": false,
     "start_time": "2024-06-02T10:33:11.368251",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>college mark</th>\n",
       "      <th>salary expectation</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>college mark</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.112635</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>salary expectation</th>\n",
       "      <td>-0.112635</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    college mark  salary expectation\n",
       "college mark            1.000000           -0.112635\n",
       "salary expectation     -0.112635            1.000000"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[['college mark','salary expectation']].corr()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6d5c393f",
   "metadata": {
    "papermill": {
     "duration": 0.021807,
     "end_time": "2024-06-02T10:33:11.447676",
     "exception": false,
     "start_time": "2024-06-02T10:33:11.425869",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "lets see the correlation between '10th Mark','12th Mark','college mark' and 'salary expectation'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "a5b412cb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:11.492822Z",
     "iopub.status.busy": "2024-06-02T10:33:11.492528Z",
     "iopub.status.idle": "2024-06-02T10:33:16.474731Z",
     "shell.execute_reply": "2024-06-02T10:33:16.473798Z"
    },
    "papermill": {
     "duration": 5.008299,
     "end_time": "2024-06-02T10:33:16.477897",
     "exception": false,
     "start_time": "2024-06-02T10:33:11.469598",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x1000 with 20 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.pairplot(data=df, vars=['10th Mark','12th Mark','college mark','salary expectation'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "839f16f9",
   "metadata": {
    "papermill": {
     "duration": 0.024391,
     "end_time": "2024-06-02T10:33:16.526524",
     "exception": false,
     "start_time": "2024-06-02T10:33:16.502133",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "there is no such correlation between these columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "9aabb94a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:16.577108Z",
     "iopub.status.busy": "2024-06-02T10:33:16.576793Z",
     "iopub.status.idle": "2024-06-02T10:33:16.600011Z",
     "shell.execute_reply": "2024-06-02T10:33:16.599133Z"
    },
    "papermill": {
     "duration": 0.051095,
     "end_time": "2024-06-02T10:33:16.602364",
     "exception": false,
     "start_time": "2024-06-02T10:33:16.551269",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Certification Course</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Department</th>\n",
       "      <th>Weight(KG)</th>\n",
       "      <th>10th Mark</th>\n",
       "      <th>12th Mark</th>\n",
       "      <th>college mark</th>\n",
       "      <th>hobbies</th>\n",
       "      <th>prefer to study in</th>\n",
       "      <th>salary expectation</th>\n",
       "      <th>Do you like your degree?</th>\n",
       "      <th>willingness to pursue a career based on their degree</th>\n",
       "      <th>Stress Level</th>\n",
       "      <th>Financial Status</th>\n",
       "      <th>part-time job</th>\n",
       "      <th>Height(M)</th>\n",
       "      <th>daily studing time(hrs)</th>\n",
       "      <th>Travelling Time(hrs)</th>\n",
       "      <th>social medai &amp; video(hrs)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>No</td>\n",
       "      <td>Male</td>\n",
       "      <td>BCA</td>\n",
       "      <td>58.0</td>\n",
       "      <td>79.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>Video Games</td>\n",
       "      <td>Morning</td>\n",
       "      <td>40000.0</td>\n",
       "      <td>No</td>\n",
       "      <td>50%</td>\n",
       "      <td>Bad</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>1.30 - 2 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>No</td>\n",
       "      <td>Female</td>\n",
       "      <td>BCA</td>\n",
       "      <td>40.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>Cinema</td>\n",
       "      <td>Morning</td>\n",
       "      <td>15000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>75%</td>\n",
       "      <td>Bad</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "      <td>0.90</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>1 - 1.30 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Male</td>\n",
       "      <td>BCA</td>\n",
       "      <td>78.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>61.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>Cinema</td>\n",
       "      <td>Anytime</td>\n",
       "      <td>13000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>50%</td>\n",
       "      <td>Awful</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "      <td>1.59</td>\n",
       "      <td>1 - 2 Hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>More than 2 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Female</td>\n",
       "      <td>BCA</td>\n",
       "      <td>20.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>59.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>Reading books</td>\n",
       "      <td>Anytime</td>\n",
       "      <td>1500000.0</td>\n",
       "      <td>No</td>\n",
       "      <td>50%</td>\n",
       "      <td>Bad</td>\n",
       "      <td>good</td>\n",
       "      <td>No</td>\n",
       "      <td>1.47</td>\n",
       "      <td>1 - 2 Hour</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>1.30 - 2 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>No</td>\n",
       "      <td>Male</td>\n",
       "      <td>BCA</td>\n",
       "      <td>54.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>Video Games</td>\n",
       "      <td>Morning</td>\n",
       "      <td>50000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>25%</td>\n",
       "      <td>Good</td>\n",
       "      <td>good</td>\n",
       "      <td>No</td>\n",
       "      <td>1.70</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>1.30 - 2 hour</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Certification Course  Gender Department  Weight(KG)  10th Mark  12th Mark  \\\n",
       "0                   No    Male        BCA        58.0       79.0       64.0   \n",
       "1                   No  Female        BCA        40.0       70.0       80.0   \n",
       "2                  Yes    Male        BCA        78.0       71.0       61.0   \n",
       "3                  Yes  Female        BCA        20.0       70.0       59.0   \n",
       "4                   No    Male        BCA        54.0       40.0       65.0   \n",
       "\n",
       "   college mark        hobbies prefer to study in  salary expectation  \\\n",
       "0          80.0    Video Games            Morning             40000.0   \n",
       "1          70.0         Cinema            Morning             15000.0   \n",
       "2          55.0         Cinema            Anytime             13000.0   \n",
       "3          58.0  Reading books            Anytime           1500000.0   \n",
       "4          30.0    Video Games            Morning             50000.0   \n",
       "\n",
       "  Do you like your degree?  \\\n",
       "0                       No   \n",
       "1                      Yes   \n",
       "2                      Yes   \n",
       "3                       No   \n",
       "4                      Yes   \n",
       "\n",
       "  willingness to pursue a career based on their degree Stress Level  \\\n",
       "0                                                50%            Bad   \n",
       "1                                                75%            Bad   \n",
       "2                                                50%          Awful   \n",
       "3                                                50%            Bad   \n",
       "4                                                25%           Good   \n",
       "\n",
       "  Financial Status part-time job  Height(M) daily studing time(hrs)  \\\n",
       "0              Bad            No       1.00          0.0 - 0.5 hour   \n",
       "1              Bad            No       0.90          0.5 - 1.0 hour   \n",
       "2              Bad            No       1.59              1 - 2 Hour   \n",
       "3             good            No       1.47              1 - 2 Hour   \n",
       "4             good            No       1.70          0.5 - 1.0 hour   \n",
       "\n",
       "  Travelling Time(hrs) social medai & video(hrs)  \n",
       "0       0.5 - 1.0 hour             1.30 - 2 hour  \n",
       "1       0.0 - 0.5 hour             1 - 1.30 hour  \n",
       "2       0.5 - 1.0 hour          More than 2 hour  \n",
       "3       0.0 - 0.5 hour             1.30 - 2 hour  \n",
       "4       0.5 - 1.0 hour             1.30 - 2 hour  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "97a37bca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-28T11:24:59.807625Z",
     "iopub.status.busy": "2024-04-28T11:24:59.806940Z",
     "iopub.status.idle": "2024-04-28T11:24:59.812588Z",
     "shell.execute_reply": "2024-04-28T11:24:59.811350Z",
     "shell.execute_reply.started": "2024-04-28T11:24:59.807592Z"
    },
    "papermill": {
     "duration": 0.023691,
     "end_time": "2024-06-02T10:33:16.651899",
     "exception": false,
     "start_time": "2024-06-02T10:33:16.628208",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### categorical - numerical Analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eabba05e",
   "metadata": {
    "papermill": {
     "duration": 0.023682,
     "end_time": "2024-06-02T10:33:16.699614",
     "exception": false,
     "start_time": "2024-06-02T10:33:16.675932",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "- lets see the avg amd median weight of Male and Female"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "2651aeec",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:16.749141Z",
     "iopub.status.busy": "2024-06-02T10:33:16.748856Z",
     "iopub.status.idle": "2024-06-02T10:33:16.757834Z",
     "shell.execute_reply": "2024-06-02T10:33:16.756988Z"
    },
    "papermill": {
     "duration": 0.035996,
     "end_time": "2024-06-02T10:33:16.759723",
     "exception": false,
     "start_time": "2024-06-02T10:33:16.723727",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Gender\n",
       "Female    50.468354\n",
       "Male      66.037821\n",
       "Name: Weight(KG), dtype: float64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(by='Gender')['Weight(KG)'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "2b9310bb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:16.810061Z",
     "iopub.status.busy": "2024-06-02T10:33:16.809791Z",
     "iopub.status.idle": "2024-06-02T10:33:16.818549Z",
     "shell.execute_reply": "2024-06-02T10:33:16.817703Z"
    },
    "papermill": {
     "duration": 0.035745,
     "end_time": "2024-06-02T10:33:16.820296",
     "exception": false,
     "start_time": "2024-06-02T10:33:16.784551",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Gender\n",
       "Female    50.0\n",
       "Male      65.0\n",
       "Name: Weight(KG), dtype: float64"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(by='Gender')['Weight(KG)'].median()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "745beaf9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:16.870749Z",
     "iopub.status.busy": "2024-06-02T10:33:16.870254Z",
     "iopub.status.idle": "2024-06-02T10:33:17.017208Z",
     "shell.execute_reply": "2024-06-02T10:33:17.015554Z"
    },
    "papermill": {
     "duration": 0.175678,
     "end_time": "2024-06-02T10:33:17.020608",
     "exception": false,
     "start_time": "2024-06-02T10:33:16.844930",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# box plot\n",
    "\n",
    "sns.boxplot(data=df, x='Gender',y='Weight(KG)')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "14aabed3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-28T11:29:21.454559Z",
     "iopub.status.busy": "2024-04-28T11:29:21.454194Z",
     "iopub.status.idle": "2024-04-28T11:29:21.649533Z",
     "shell.execute_reply": "2024-04-28T11:29:21.648388Z",
     "shell.execute_reply.started": "2024-04-28T11:29:21.454532Z"
    },
    "papermill": {
     "duration": 0.025021,
     "end_time": "2024-06-02T10:33:17.093775",
     "exception": false,
     "start_time": "2024-06-02T10:33:17.068754",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "- lets see the salary expectations of male vs female"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "b4113b77",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:17.148503Z",
     "iopub.status.busy": "2024-06-02T10:33:17.148137Z",
     "iopub.status.idle": "2024-06-02T10:33:17.157167Z",
     "shell.execute_reply": "2024-06-02T10:33:17.156202Z"
    },
    "papermill": {
     "duration": 0.037288,
     "end_time": "2024-06-02T10:33:17.159176",
     "exception": false,
     "start_time": "2024-06-02T10:33:17.121888",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Gender\n",
       "Female    39671.052632\n",
       "Male      30783.333333\n",
       "Name: salary expectation, dtype: float64"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(by='Gender')['salary expectation'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "da3f671e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:17.210942Z",
     "iopub.status.busy": "2024-06-02T10:33:17.210122Z",
     "iopub.status.idle": "2024-06-02T10:33:17.221075Z",
     "shell.execute_reply": "2024-06-02T10:33:17.220303Z"
    },
    "papermill": {
     "duration": 0.039717,
     "end_time": "2024-06-02T10:33:17.224026",
     "exception": false,
     "start_time": "2024-06-02T10:33:17.184309",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Gender\n",
       "Female    18000.0\n",
       "Male      20000.0\n",
       "Name: salary expectation, dtype: float64"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(by='Gender')['salary expectation'].median()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6dd295af",
   "metadata": {
    "papermill": {
     "duration": 0.024901,
     "end_time": "2024-06-02T10:33:17.275545",
     "exception": false,
     "start_time": "2024-06-02T10:33:17.250644",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "there is difference in mean and median of salary expectations of male and female. mean 'salary expectations' of female is more than male while median (50 percentile) 'salary expectations' of female are less than men. clearly there are outliers.\n",
    "\n",
    "lets compare them by ploting as bar chart"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "b1c18582",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:17.327403Z",
     "iopub.status.busy": "2024-06-02T10:33:17.326627Z",
     "iopub.status.idle": "2024-06-02T10:33:17.575220Z",
     "shell.execute_reply": "2024-06-02T10:33:17.574239Z"
    },
    "papermill": {
     "duration": 0.276986,
     "end_time": "2024-06-02T10:33:17.577355",
     "exception": false,
     "start_time": "2024-06-02T10:33:17.300369",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.groupby(by='Gender')['salary expectation'].aggregate(['mean','median']).plot.bar()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "45c73fd5",
   "metadata": {
    "papermill": {
     "duration": 0.025196,
     "end_time": "2024-06-02T10:33:17.628600",
     "exception": false,
     "start_time": "2024-06-02T10:33:17.603404",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "lets see the outliers in the 'salary expectation' columns of female gender"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "73121a5a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:17.680964Z",
     "iopub.status.busy": "2024-06-02T10:33:17.680207Z",
     "iopub.status.idle": "2024-06-02T10:33:17.898363Z",
     "shell.execute_reply": "2024-06-02T10:33:17.897403Z"
    },
    "papermill": {
     "duration": 0.246385,
     "end_time": "2024-06-02T10:33:17.900342",
     "exception": false,
     "start_time": "2024-06-02T10:33:17.653957",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(data=df, x='Gender',y='salary expectation')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "932bf19a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:17.953572Z",
     "iopub.status.busy": "2024-06-02T10:33:17.953229Z",
     "iopub.status.idle": "2024-06-02T10:33:17.963541Z",
     "shell.execute_reply": "2024-06-02T10:33:17.962480Z"
    },
    "papermill": {
     "duration": 0.039196,
     "end_time": "2024-06-02T10:33:17.965656",
     "exception": false,
     "start_time": "2024-06-02T10:33:17.926460",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.90      25000.0\n",
       "0.95      50000.0\n",
       "0.97      87500.0\n",
       "0.99     465000.0\n",
       "1.00    1500000.0\n",
       "Name: salary expectation, dtype: float64"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "col = df.loc[df['Gender'] == 'Female', 'salary expectation']\n",
    "col.quantile([0.90, 0.95,0.97, 0.99, 1]) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "e900a558",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:18.019180Z",
     "iopub.status.busy": "2024-06-02T10:33:18.018461Z",
     "iopub.status.idle": "2024-06-02T10:33:18.031656Z",
     "shell.execute_reply": "2024-06-02T10:33:18.029408Z"
    },
    "papermill": {
     "duration": 0.042222,
     "end_time": "2024-06-02T10:33:18.033701",
     "exception": false,
     "start_time": "2024-06-02T10:33:17.991479",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.90     40000.0\n",
       "0.95     50000.0\n",
       "0.97     55300.0\n",
       "0.99    304000.0\n",
       "1.00    700000.0\n",
       "Name: salary expectation, dtype: float64"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "col = df.loc[df['Gender'] == 'Male', 'salary expectation']\n",
    "col.quantile([0.90, 0.95,0.97, 0.99, 1]) "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a62510b",
   "metadata": {
    "papermill": {
     "duration": 0.02602,
     "end_time": "2024-06-02T10:33:18.086000",
     "exception": false,
     "start_time": "2024-06-02T10:33:18.059980",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "there is a hugh difference between 97 percentile and 99 percentile for both male and Female"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "e74f7ca0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:18.138894Z",
     "iopub.status.busy": "2024-06-02T10:33:18.138617Z",
     "iopub.status.idle": "2024-06-02T10:33:18.160373Z",
     "shell.execute_reply": "2024-06-02T10:33:18.159427Z"
    },
    "papermill": {
     "duration": 0.05117,
     "end_time": "2024-06-02T10:33:18.162727",
     "exception": false,
     "start_time": "2024-06-02T10:33:18.111557",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Certification Course</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Department</th>\n",
       "      <th>Weight(KG)</th>\n",
       "      <th>10th Mark</th>\n",
       "      <th>12th Mark</th>\n",
       "      <th>college mark</th>\n",
       "      <th>hobbies</th>\n",
       "      <th>prefer to study in</th>\n",
       "      <th>salary expectation</th>\n",
       "      <th>Do you like your degree?</th>\n",
       "      <th>willingness to pursue a career based on their degree</th>\n",
       "      <th>Stress Level</th>\n",
       "      <th>Financial Status</th>\n",
       "      <th>part-time job</th>\n",
       "      <th>Height(M)</th>\n",
       "      <th>daily studing time(hrs)</th>\n",
       "      <th>Travelling Time(hrs)</th>\n",
       "      <th>social medai &amp; video(hrs)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Female</td>\n",
       "      <td>BCA</td>\n",
       "      <td>20.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>59.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>Reading books</td>\n",
       "      <td>Anytime</td>\n",
       "      <td>1500000.0</td>\n",
       "      <td>No</td>\n",
       "      <td>50%</td>\n",
       "      <td>Bad</td>\n",
       "      <td>good</td>\n",
       "      <td>No</td>\n",
       "      <td>1.47</td>\n",
       "      <td>1 - 2 Hour</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>1.30 - 2 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>154</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Female</td>\n",
       "      <td>BCA</td>\n",
       "      <td>50.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>49.5</td>\n",
       "      <td>85.0</td>\n",
       "      <td>Reading books</td>\n",
       "      <td>Night</td>\n",
       "      <td>100000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>75%</td>\n",
       "      <td>Bad</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "      <td>1.56</td>\n",
       "      <td>2 - 3 hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Female</td>\n",
       "      <td>Commerce</td>\n",
       "      <td>40.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>Cinema</td>\n",
       "      <td>Morning</td>\n",
       "      <td>120000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>50%</td>\n",
       "      <td>Good</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "      <td>1.50</td>\n",
       "      <td>1 - 2 Hour</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>1 - 1.30 hour</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Certification Course  Gender Department  Weight(KG)  10th Mark  12th Mark  \\\n",
       "3                    Yes  Female        BCA        20.0       70.0       59.0   \n",
       "154                  Yes  Female        BCA        50.0       64.0       49.5   \n",
       "179                  Yes  Female   Commerce        40.0       80.0       75.0   \n",
       "\n",
       "     college mark        hobbies prefer to study in  salary expectation  \\\n",
       "3            58.0  Reading books            Anytime           1500000.0   \n",
       "154          85.0  Reading books              Night            100000.0   \n",
       "179          70.0         Cinema            Morning            120000.0   \n",
       "\n",
       "    Do you like your degree?  \\\n",
       "3                         No   \n",
       "154                      Yes   \n",
       "179                      Yes   \n",
       "\n",
       "    willingness to pursue a career based on their degree Stress Level  \\\n",
       "3                                                  50%            Bad   \n",
       "154                                                75%            Bad   \n",
       "179                                                50%           Good   \n",
       "\n",
       "    Financial Status part-time job  Height(M) daily studing time(hrs)  \\\n",
       "3               good            No       1.47              1 - 2 Hour   \n",
       "154              Bad            No       1.56              2 - 3 hour   \n",
       "179              Bad            No       1.50              1 - 2 Hour   \n",
       "\n",
       "    Travelling Time(hrs) social medai & video(hrs)  \n",
       "3         0.0 - 0.5 hour             1.30 - 2 hour  \n",
       "154       0.5 - 1.0 hour            0.5 - 1.0 hour  \n",
       "179       0.0 - 0.5 hour             1 - 1.30 hour  "
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# outliers for Female\n",
    "\n",
    "df[(df['Gender'] == 'Female') & (df['salary expectation'] > 87500)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "848e905e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:18.218625Z",
     "iopub.status.busy": "2024-06-02T10:33:18.218364Z",
     "iopub.status.idle": "2024-06-02T10:33:18.239767Z",
     "shell.execute_reply": "2024-06-02T10:33:18.238858Z"
    },
    "papermill": {
     "duration": 0.050439,
     "end_time": "2024-06-02T10:33:18.241633",
     "exception": false,
     "start_time": "2024-06-02T10:33:18.191194",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Certification Course</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Department</th>\n",
       "      <th>Weight(KG)</th>\n",
       "      <th>10th Mark</th>\n",
       "      <th>12th Mark</th>\n",
       "      <th>college mark</th>\n",
       "      <th>hobbies</th>\n",
       "      <th>prefer to study in</th>\n",
       "      <th>salary expectation</th>\n",
       "      <th>Do you like your degree?</th>\n",
       "      <th>willingness to pursue a career based on their degree</th>\n",
       "      <th>Stress Level</th>\n",
       "      <th>Financial Status</th>\n",
       "      <th>part-time job</th>\n",
       "      <th>Height(M)</th>\n",
       "      <th>daily studing time(hrs)</th>\n",
       "      <th>Travelling Time(hrs)</th>\n",
       "      <th>social medai &amp; video(hrs)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>No</td>\n",
       "      <td>Male</td>\n",
       "      <td>B.com Accounting and Finance</td>\n",
       "      <td>83.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>82.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>Video Games</td>\n",
       "      <td>Anytime</td>\n",
       "      <td>100000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>75%</td>\n",
       "      <td>Awful</td>\n",
       "      <td>good</td>\n",
       "      <td>No</td>\n",
       "      <td>0.90</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>1.30 - 2 hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Male</td>\n",
       "      <td>B.com Accounting and Finance</td>\n",
       "      <td>80.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>85.0</td>\n",
       "      <td>Sports</td>\n",
       "      <td>Anytime</td>\n",
       "      <td>100000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>100%</td>\n",
       "      <td>fabulous</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "      <td>1.70</td>\n",
       "      <td>More Than 4 hour</td>\n",
       "      <td>1.30 - 2 hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>185</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Male</td>\n",
       "      <td>B.com ISM</td>\n",
       "      <td>80.0</td>\n",
       "      <td>76.0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>Cinema</td>\n",
       "      <td>Morning</td>\n",
       "      <td>500000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>50%</td>\n",
       "      <td>Awful</td>\n",
       "      <td>Awful</td>\n",
       "      <td>No</td>\n",
       "      <td>1.63</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>0.016666666666666666 - 0.5 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Male</td>\n",
       "      <td>B.com ISM</td>\n",
       "      <td>80.0</td>\n",
       "      <td>67.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>Sports</td>\n",
       "      <td>Anytime</td>\n",
       "      <td>700000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>100%</td>\n",
       "      <td>Good</td>\n",
       "      <td>good</td>\n",
       "      <td>No</td>\n",
       "      <td>1.70</td>\n",
       "      <td>More Than 4 hour</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>0.016666666666666666 - 0.5 hour</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Certification Course Gender                     Department  Weight(KG)  \\\n",
       "47                    No   Male  B.com Accounting and Finance         83.0   \n",
       "145                  Yes   Male  B.com Accounting and Finance         80.0   \n",
       "185                  Yes   Male                      B.com ISM        80.0   \n",
       "188                  Yes   Male                      B.com ISM        80.0   \n",
       "\n",
       "     10th Mark  12th Mark  college mark      hobbies prefer to study in  \\\n",
       "47        60.0       82.0          65.0  Video Games            Anytime   \n",
       "145       75.0       90.0          85.0       Sports            Anytime   \n",
       "185       76.0       47.0          30.0       Cinema            Morning   \n",
       "188       67.0       70.0          60.0       Sports            Anytime   \n",
       "\n",
       "     salary expectation Do you like your degree?  \\\n",
       "47             100000.0                      Yes   \n",
       "145            100000.0                      Yes   \n",
       "185            500000.0                      Yes   \n",
       "188            700000.0                      Yes   \n",
       "\n",
       "    willingness to pursue a career based on their degree Stress Level  \\\n",
       "47                                                 75%          Awful   \n",
       "145                                               100%       fabulous   \n",
       "185                                                50%          Awful   \n",
       "188                                               100%           Good   \n",
       "\n",
       "    Financial Status part-time job  Height(M) daily studing time(hrs)  \\\n",
       "47              good            No       0.90          0.0 - 0.5 hour   \n",
       "145              Bad            No       1.70        More Than 4 hour   \n",
       "185            Awful            No       1.63          0.0 - 0.5 hour   \n",
       "188             good            No       1.70        More Than 4 hour   \n",
       "\n",
       "    Travelling Time(hrs)        social medai & video(hrs)  \n",
       "47         1.30 - 2 hour                   0.5 - 1.0 hour  \n",
       "145        1.30 - 2 hour                   0.5 - 1.0 hour  \n",
       "185       0.0 - 0.5 hour  0.016666666666666666 - 0.5 hour  \n",
       "188       0.0 - 0.5 hour  0.016666666666666666 - 0.5 hour  "
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# outliers for male\n",
    "\n",
    "df[(df['Gender'] == 'Male') & (df['salary expectation'] > 87500)]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf989949",
   "metadata": {
    "papermill": {
     "duration": 0.026414,
     "end_time": "2024-06-02T10:33:18.294778",
     "exception": false,
     "start_time": "2024-06-02T10:33:18.268364",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "we will have to drop the records for female where the 'salary expectation' = 1500000.0 and for male where the 'salary expectation' > 100000.0. They have hugh difference from the normal range and are clearly Outliers."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "6152a37c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:18.348305Z",
     "iopub.status.busy": "2024-06-02T10:33:18.348028Z",
     "iopub.status.idle": "2024-06-02T10:33:18.357897Z",
     "shell.execute_reply": "2024-06-02T10:33:18.357184Z"
    },
    "papermill": {
     "duration": 0.038733,
     "end_time": "2024-06-02T10:33:18.359674",
     "exception": false,
     "start_time": "2024-06-02T10:33:18.320941",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.drop(df[(df['Gender'] == 'Male') & (df['salary expectation'] > 100000.0)].index, axis=0, inplace=True)\n",
    "df.drop(df[(df['Gender'] == 'Female') & (df['salary expectation'] == 1500000.0)].index, axis=0, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4f6df905",
   "metadata": {
    "papermill": {
     "duration": 0.025868,
     "end_time": "2024-06-02T10:33:18.411640",
     "exception": false,
     "start_time": "2024-06-02T10:33:18.385772",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### College Marks Prediction - Linear Regression"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "acfdff44",
   "metadata": {
    "papermill": {
     "duration": 0.026427,
     "end_time": "2024-06-02T10:33:18.464678",
     "exception": false,
     "start_time": "2024-06-02T10:33:18.438251",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Data Prepration "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "1958beff",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:18.519387Z",
     "iopub.status.busy": "2024-06-02T10:33:18.519093Z",
     "iopub.status.idle": "2024-06-02T10:33:18.541932Z",
     "shell.execute_reply": "2024-06-02T10:33:18.541051Z"
    },
    "papermill": {
     "duration": 0.052743,
     "end_time": "2024-06-02T10:33:18.544031",
     "exception": false,
     "start_time": "2024-06-02T10:33:18.491288",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Certification Course</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Department</th>\n",
       "      <th>Weight(KG)</th>\n",
       "      <th>10th Mark</th>\n",
       "      <th>12th Mark</th>\n",
       "      <th>college mark</th>\n",
       "      <th>hobbies</th>\n",
       "      <th>prefer to study in</th>\n",
       "      <th>salary expectation</th>\n",
       "      <th>Do you like your degree?</th>\n",
       "      <th>willingness to pursue a career based on their degree</th>\n",
       "      <th>Stress Level</th>\n",
       "      <th>Financial Status</th>\n",
       "      <th>part-time job</th>\n",
       "      <th>Height(M)</th>\n",
       "      <th>daily studing time(hrs)</th>\n",
       "      <th>Travelling Time(hrs)</th>\n",
       "      <th>social medai &amp; video(hrs)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>No</td>\n",
       "      <td>Male</td>\n",
       "      <td>BCA</td>\n",
       "      <td>58.0</td>\n",
       "      <td>79.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>Video Games</td>\n",
       "      <td>Morning</td>\n",
       "      <td>40000.0</td>\n",
       "      <td>No</td>\n",
       "      <td>50%</td>\n",
       "      <td>Bad</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>1.30 - 2 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>No</td>\n",
       "      <td>Female</td>\n",
       "      <td>BCA</td>\n",
       "      <td>40.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>Cinema</td>\n",
       "      <td>Morning</td>\n",
       "      <td>15000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>75%</td>\n",
       "      <td>Bad</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "      <td>0.90</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>1 - 1.30 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Male</td>\n",
       "      <td>BCA</td>\n",
       "      <td>78.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>61.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>Cinema</td>\n",
       "      <td>Anytime</td>\n",
       "      <td>13000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>50%</td>\n",
       "      <td>Awful</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "      <td>1.59</td>\n",
       "      <td>1 - 2 Hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>More than 2 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>No</td>\n",
       "      <td>Male</td>\n",
       "      <td>BCA</td>\n",
       "      <td>54.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>Video Games</td>\n",
       "      <td>Morning</td>\n",
       "      <td>50000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>25%</td>\n",
       "      <td>Good</td>\n",
       "      <td>good</td>\n",
       "      <td>No</td>\n",
       "      <td>1.70</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>1.30 - 2 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Female</td>\n",
       "      <td>BCA</td>\n",
       "      <td>33.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>Cinema</td>\n",
       "      <td>Night</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>50%</td>\n",
       "      <td>Bad</td>\n",
       "      <td>good</td>\n",
       "      <td>No</td>\n",
       "      <td>1.39</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Certification Course  Gender Department  Weight(KG)  10th Mark  12th Mark  \\\n",
       "0                   No    Male        BCA        58.0       79.0       64.0   \n",
       "1                   No  Female        BCA        40.0       70.0       80.0   \n",
       "2                  Yes    Male        BCA        78.0       71.0       61.0   \n",
       "4                   No    Male        BCA        54.0       40.0       65.0   \n",
       "5                  Yes  Female        BCA        33.0       90.0       75.0   \n",
       "\n",
       "   college mark      hobbies prefer to study in  salary expectation  \\\n",
       "0          80.0  Video Games            Morning             40000.0   \n",
       "1          70.0       Cinema            Morning             15000.0   \n",
       "2          55.0       Cinema            Anytime             13000.0   \n",
       "4          30.0  Video Games            Morning             50000.0   \n",
       "5          70.0       Cinema              Night             20000.0   \n",
       "\n",
       "  Do you like your degree?  \\\n",
       "0                       No   \n",
       "1                      Yes   \n",
       "2                      Yes   \n",
       "4                      Yes   \n",
       "5                      Yes   \n",
       "\n",
       "  willingness to pursue a career based on their degree Stress Level  \\\n",
       "0                                                50%            Bad   \n",
       "1                                                75%            Bad   \n",
       "2                                                50%          Awful   \n",
       "4                                                25%           Good   \n",
       "5                                                50%            Bad   \n",
       "\n",
       "  Financial Status part-time job  Height(M) daily studing time(hrs)  \\\n",
       "0              Bad            No       1.00          0.0 - 0.5 hour   \n",
       "1              Bad            No       0.90          0.5 - 1.0 hour   \n",
       "2              Bad            No       1.59              1 - 2 Hour   \n",
       "4             good            No       1.70          0.5 - 1.0 hour   \n",
       "5             good            No       1.39          0.5 - 1.0 hour   \n",
       "\n",
       "  Travelling Time(hrs) social medai & video(hrs)  \n",
       "0       0.5 - 1.0 hour             1.30 - 2 hour  \n",
       "1       0.0 - 0.5 hour             1 - 1.30 hour  \n",
       "2       0.5 - 1.0 hour          More than 2 hour  \n",
       "4       0.5 - 1.0 hour             1.30 - 2 hour  \n",
       "5       0.0 - 0.5 hour            0.5 - 1.0 hour  "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5c68dffa",
   "metadata": {
    "papermill": {
     "duration": 0.026789,
     "end_time": "2024-06-02T10:33:18.600571",
     "exception": false,
     "start_time": "2024-06-02T10:33:18.573782",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "- For predicting the college marks, I will take only some variables that are relevent for predicting this variable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "eea759ef",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:18.655400Z",
     "iopub.status.busy": "2024-06-02T10:33:18.655149Z",
     "iopub.status.idle": "2024-06-02T10:33:18.676321Z",
     "shell.execute_reply": "2024-06-02T10:33:18.675473Z"
    },
    "papermill": {
     "duration": 0.050891,
     "end_time": "2024-06-02T10:33:18.678223",
     "exception": false,
     "start_time": "2024-06-02T10:33:18.627332",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Certification Course</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Department</th>\n",
       "      <th>10th Mark</th>\n",
       "      <th>12th Mark</th>\n",
       "      <th>college mark</th>\n",
       "      <th>hobbies</th>\n",
       "      <th>prefer to study in</th>\n",
       "      <th>salary expectation</th>\n",
       "      <th>Do you like your degree?</th>\n",
       "      <th>Stress Level</th>\n",
       "      <th>Financial Status</th>\n",
       "      <th>part-time job</th>\n",
       "      <th>daily studing time(hrs)</th>\n",
       "      <th>Travelling Time(hrs)</th>\n",
       "      <th>social medai &amp; video(hrs)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>No</td>\n",
       "      <td>Male</td>\n",
       "      <td>BCA</td>\n",
       "      <td>79.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>Video Games</td>\n",
       "      <td>Morning</td>\n",
       "      <td>40000.0</td>\n",
       "      <td>No</td>\n",
       "      <td>Bad</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>1.30 - 2 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>No</td>\n",
       "      <td>Female</td>\n",
       "      <td>BCA</td>\n",
       "      <td>70.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>Cinema</td>\n",
       "      <td>Morning</td>\n",
       "      <td>15000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Bad</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>1 - 1.30 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Male</td>\n",
       "      <td>BCA</td>\n",
       "      <td>71.0</td>\n",
       "      <td>61.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>Cinema</td>\n",
       "      <td>Anytime</td>\n",
       "      <td>13000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Awful</td>\n",
       "      <td>Bad</td>\n",
       "      <td>No</td>\n",
       "      <td>1 - 2 Hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>More than 2 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>No</td>\n",
       "      <td>Male</td>\n",
       "      <td>BCA</td>\n",
       "      <td>40.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>Video Games</td>\n",
       "      <td>Morning</td>\n",
       "      <td>50000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Good</td>\n",
       "      <td>good</td>\n",
       "      <td>No</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>1.30 - 2 hour</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Female</td>\n",
       "      <td>BCA</td>\n",
       "      <td>90.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>Cinema</td>\n",
       "      <td>Night</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Bad</td>\n",
       "      <td>good</td>\n",
       "      <td>No</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "      <td>0.0 - 0.5 hour</td>\n",
       "      <td>0.5 - 1.0 hour</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Certification Course  Gender Department  10th Mark  12th Mark  college mark  \\\n",
       "0                   No    Male        BCA       79.0       64.0          80.0   \n",
       "1                   No  Female        BCA       70.0       80.0          70.0   \n",
       "2                  Yes    Male        BCA       71.0       61.0          55.0   \n",
       "4                   No    Male        BCA       40.0       65.0          30.0   \n",
       "5                  Yes  Female        BCA       90.0       75.0          70.0   \n",
       "\n",
       "       hobbies prefer to study in  salary expectation  \\\n",
       "0  Video Games            Morning             40000.0   \n",
       "1       Cinema            Morning             15000.0   \n",
       "2       Cinema            Anytime             13000.0   \n",
       "4  Video Games            Morning             50000.0   \n",
       "5       Cinema              Night             20000.0   \n",
       "\n",
       "  Do you like your degree? Stress Level Financial Status part-time job  \\\n",
       "0                       No          Bad              Bad            No   \n",
       "1                      Yes          Bad              Bad            No   \n",
       "2                      Yes        Awful              Bad            No   \n",
       "4                      Yes         Good             good            No   \n",
       "5                      Yes          Bad             good            No   \n",
       "\n",
       "  daily studing time(hrs) Travelling Time(hrs) social medai & video(hrs)  \n",
       "0          0.0 - 0.5 hour       0.5 - 1.0 hour             1.30 - 2 hour  \n",
       "1          0.5 - 1.0 hour       0.0 - 0.5 hour             1 - 1.30 hour  \n",
       "2              1 - 2 Hour       0.5 - 1.0 hour          More than 2 hour  \n",
       "4          0.5 - 1.0 hour       0.5 - 1.0 hour             1.30 - 2 hour  \n",
       "5          0.5 - 1.0 hour       0.0 - 0.5 hour            0.5 - 1.0 hour  "
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = df[[\"Certification Course\",\"Gender\",\"Department\",\"10th Mark\",\"12th Mark\",\"college mark\",\n",
    "     \"hobbies\",\"prefer to study in\",\"salary expectation\",'Do you like your degree?',\"Stress Level\",\n",
    "     \"Financial Status\",\"part-time job\",\"daily studing time(hrs)\",\"Travelling Time(hrs)\",\n",
    "     \"social medai & video(hrs)\"]]\n",
    "\n",
    "X.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "a6a4e57e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:18.733642Z",
     "iopub.status.busy": "2024-06-02T10:33:18.733325Z",
     "iopub.status.idle": "2024-06-02T10:33:18.750060Z",
     "shell.execute_reply": "2024-06-02T10:33:18.749177Z"
    },
    "papermill": {
     "duration": 0.046568,
     "end_time": "2024-06-02T10:33:18.752024",
     "exception": false,
     "start_time": "2024-06-02T10:33:18.705456",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "col_yn = ['Certification Course', 'Do you like your degree?', 'part-time job']\n",
    "\n",
    "dumm_col = [\"Department\",\"hobbies\",\"prefer to study in\",\"Stress Level\",\n",
    "            \"Financial Status\",\"daily studing time(hrs)\",\"Travelling Time(hrs)\",\n",
    "            \"social medai & video(hrs)\"]\n",
    "\n",
    "X[col_yn] = X[col_yn].replace({'Yes':1, 'No':0})\n",
    "dummy_var = pd.get_dummies(X[dumm_col], drop_first=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "97ee72cc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:18.807840Z",
     "iopub.status.busy": "2024-06-02T10:33:18.807599Z",
     "iopub.status.idle": "2024-06-02T10:33:18.829664Z",
     "shell.execute_reply": "2024-06-02T10:33:18.828791Z"
    },
    "papermill": {
     "duration": 0.052193,
     "end_time": "2024-06-02T10:33:18.831873",
     "exception": false,
     "start_time": "2024-06-02T10:33:18.779680",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Department_B.com ISM</th>\n",
       "      <th>Department_BCA</th>\n",
       "      <th>Department_Commerce</th>\n",
       "      <th>hobbies_Reading books</th>\n",
       "      <th>hobbies_Sports</th>\n",
       "      <th>hobbies_Video Games</th>\n",
       "      <th>prefer to study in_Morning</th>\n",
       "      <th>prefer to study in_Night</th>\n",
       "      <th>Stress Level_Bad</th>\n",
       "      <th>Stress Level_Good</th>\n",
       "      <th>...</th>\n",
       "      <th>Travelling Time(hrs)_1 - 1.30 hour</th>\n",
       "      <th>Travelling Time(hrs)_1.30 - 2 hour</th>\n",
       "      <th>Travelling Time(hrs)_2 - 2.30 hour</th>\n",
       "      <th>Travelling Time(hrs)_2.30 - 3 hour</th>\n",
       "      <th>Travelling Time(hrs)_more than 3 hour</th>\n",
       "      <th>social medai &amp; video(hrs)_0.5 - 1.0 hour</th>\n",
       "      <th>social medai &amp; video(hrs)_1 - 1.30 hour</th>\n",
       "      <th>social medai &amp; video(hrs)_1.30 - 2 hour</th>\n",
       "      <th>social medai &amp; video(hrs)_More than 2 hour</th>\n",
       "      <th>social medai &amp; video(hrs)_less than 0 hour</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Department_B.com ISM  Department_BCA  Department_Commerce  \\\n",
       "0                 False            True                False   \n",
       "1                 False            True                False   \n",
       "2                 False            True                False   \n",
       "4                 False            True                False   \n",
       "5                 False            True                False   \n",
       "\n",
       "   hobbies_Reading books  hobbies_Sports  hobbies_Video Games  \\\n",
       "0                  False           False                 True   \n",
       "1                  False           False                False   \n",
       "2                  False           False                False   \n",
       "4                  False           False                 True   \n",
       "5                  False           False                False   \n",
       "\n",
       "   prefer to study in_Morning  prefer to study in_Night  Stress Level_Bad  \\\n",
       "0                        True                     False              True   \n",
       "1                        True                     False              True   \n",
       "2                       False                     False             False   \n",
       "4                        True                     False             False   \n",
       "5                       False                      True              True   \n",
       "\n",
       "   Stress Level_Good  ...  Travelling Time(hrs)_1 - 1.30 hour  \\\n",
       "0              False  ...                               False   \n",
       "1              False  ...                               False   \n",
       "2              False  ...                               False   \n",
       "4               True  ...                               False   \n",
       "5              False  ...                               False   \n",
       "\n",
       "   Travelling Time(hrs)_1.30 - 2 hour  Travelling Time(hrs)_2 - 2.30 hour  \\\n",
       "0                               False                               False   \n",
       "1                               False                               False   \n",
       "2                               False                               False   \n",
       "4                               False                               False   \n",
       "5                               False                               False   \n",
       "\n",
       "   Travelling Time(hrs)_2.30 - 3 hour  Travelling Time(hrs)_more than 3 hour  \\\n",
       "0                               False                                  False   \n",
       "1                               False                                  False   \n",
       "2                               False                                  False   \n",
       "4                               False                                  False   \n",
       "5                               False                                  False   \n",
       "\n",
       "   social medai & video(hrs)_0.5 - 1.0 hour  \\\n",
       "0                                     False   \n",
       "1                                     False   \n",
       "2                                     False   \n",
       "4                                     False   \n",
       "5                                      True   \n",
       "\n",
       "   social medai & video(hrs)_1 - 1.30 hour  \\\n",
       "0                                    False   \n",
       "1                                     True   \n",
       "2                                    False   \n",
       "4                                    False   \n",
       "5                                    False   \n",
       "\n",
       "   social medai & video(hrs)_1.30 - 2 hour  \\\n",
       "0                                     True   \n",
       "1                                    False   \n",
       "2                                    False   \n",
       "4                                     True   \n",
       "5                                    False   \n",
       "\n",
       "   social medai & video(hrs)_More than 2 hour  \\\n",
       "0                                       False   \n",
       "1                                       False   \n",
       "2                                        True   \n",
       "4                                       False   \n",
       "5                                       False   \n",
       "\n",
       "   social medai & video(hrs)_less than 0 hour  \n",
       "0                                       False  \n",
       "1                                       False  \n",
       "2                                       False  \n",
       "4                                       False  \n",
       "5                                       False  \n",
       "\n",
       "[5 rows x 30 columns]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dummy_var.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "334d670d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:18.890634Z",
     "iopub.status.busy": "2024-06-02T10:33:18.890363Z",
     "iopub.status.idle": "2024-06-02T10:33:18.904894Z",
     "shell.execute_reply": "2024-06-02T10:33:18.903979Z"
    },
    "papermill": {
     "duration": 0.045182,
     "end_time": "2024-06-02T10:33:18.906779",
     "exception": false,
     "start_time": "2024-06-02T10:33:18.861597",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Certification Course</th>\n",
       "      <th>Gender</th>\n",
       "      <th>10th Mark</th>\n",
       "      <th>12th Mark</th>\n",
       "      <th>college mark</th>\n",
       "      <th>salary expectation</th>\n",
       "      <th>Do you like your degree?</th>\n",
       "      <th>part-time job</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Male</td>\n",
       "      <td>79.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>40000.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>Female</td>\n",
       "      <td>70.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>15000.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>71.0</td>\n",
       "      <td>61.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>13000.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>Male</td>\n",
       "      <td>40.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>50000.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "      <td>Female</td>\n",
       "      <td>90.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Certification Course  Gender  10th Mark  12th Mark  college mark  \\\n",
       "0                     0    Male       79.0       64.0          80.0   \n",
       "1                     0  Female       70.0       80.0          70.0   \n",
       "2                     1    Male       71.0       61.0          55.0   \n",
       "4                     0    Male       40.0       65.0          30.0   \n",
       "5                     1  Female       90.0       75.0          70.0   \n",
       "\n",
       "   salary expectation  Do you like your degree?  part-time job  \n",
       "0             40000.0                         0              0  \n",
       "1             15000.0                         1              0  \n",
       "2             13000.0                         1              0  \n",
       "4             50000.0                         1              0  \n",
       "5             20000.0                         1              0  "
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X.drop(dumm_col, axis=1, inplace=True)\n",
    "X.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "f057a4c7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:18.963736Z",
     "iopub.status.busy": "2024-06-02T10:33:18.963498Z",
     "iopub.status.idle": "2024-06-02T10:33:18.970505Z",
     "shell.execute_reply": "2024-06-02T10:33:18.969711Z"
    },
    "papermill": {
     "duration": 0.038017,
     "end_time": "2024-06-02T10:33:18.972658",
     "exception": false,
     "start_time": "2024-06-02T10:33:18.934641",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Certification Course', 'Gender', '10th Mark', '12th Mark',\n",
       "       'college mark', 'salary expectation', 'Do you like your degree?',\n",
       "       'part-time job', 'Department_B.com ISM', 'Department_BCA',\n",
       "       'Department_Commerce', 'hobbies_Reading books', 'hobbies_Sports',\n",
       "       'hobbies_Video Games', 'prefer to study in_Morning',\n",
       "       'prefer to study in_Night', 'Stress Level_Bad', 'Stress Level_Good',\n",
       "       'Stress Level_fabulous', 'Financial Status_Bad',\n",
       "       'Financial Status_Fabulous', 'Financial Status_good',\n",
       "       'daily studing time(hrs)_0.5 - 1.0 hour',\n",
       "       'daily studing time(hrs)_1 - 2 Hour',\n",
       "       'daily studing time(hrs)_2 - 3 hour',\n",
       "       'daily studing time(hrs)_3 - 4 hour',\n",
       "       'daily studing time(hrs)_More Than 4 hour',\n",
       "       'Travelling Time(hrs)_0.5 - 1.0 hour',\n",
       "       'Travelling Time(hrs)_1 - 1.30 hour',\n",
       "       'Travelling Time(hrs)_1.30 - 2 hour',\n",
       "       'Travelling Time(hrs)_2 - 2.30 hour',\n",
       "       'Travelling Time(hrs)_2.30 - 3 hour',\n",
       "       'Travelling Time(hrs)_more than 3 hour',\n",
       "       'social medai & video(hrs)_0.5 - 1.0 hour',\n",
       "       'social medai & video(hrs)_1 - 1.30 hour',\n",
       "       'social medai & video(hrs)_1.30 - 2 hour',\n",
       "       'social medai & video(hrs)_More than 2 hour',\n",
       "       'social medai & video(hrs)_less than 0 hour'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = pd.concat([X,dummy_var], axis=1)\n",
    "X.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "b599d14c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:19.030699Z",
     "iopub.status.busy": "2024-06-02T10:33:19.030427Z",
     "iopub.status.idle": "2024-06-02T10:33:19.053887Z",
     "shell.execute_reply": "2024-06-02T10:33:19.052971Z"
    },
    "papermill": {
     "duration": 0.054574,
     "end_time": "2024-06-02T10:33:19.055662",
     "exception": false,
     "start_time": "2024-06-02T10:33:19.001088",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Certification Course</th>\n",
       "      <th>Gender</th>\n",
       "      <th>10th Mark</th>\n",
       "      <th>12th Mark</th>\n",
       "      <th>college mark</th>\n",
       "      <th>salary expectation</th>\n",
       "      <th>Do you like your degree?</th>\n",
       "      <th>part-time job</th>\n",
       "      <th>Department_B.com ISM</th>\n",
       "      <th>Department_BCA</th>\n",
       "      <th>...</th>\n",
       "      <th>Travelling Time(hrs)_1 - 1.30 hour</th>\n",
       "      <th>Travelling Time(hrs)_1.30 - 2 hour</th>\n",
       "      <th>Travelling Time(hrs)_2 - 2.30 hour</th>\n",
       "      <th>Travelling Time(hrs)_2.30 - 3 hour</th>\n",
       "      <th>Travelling Time(hrs)_more than 3 hour</th>\n",
       "      <th>social medai &amp; video(hrs)_0.5 - 1.0 hour</th>\n",
       "      <th>social medai &amp; video(hrs)_1 - 1.30 hour</th>\n",
       "      <th>social medai &amp; video(hrs)_1.30 - 2 hour</th>\n",
       "      <th>social medai &amp; video(hrs)_More than 2 hour</th>\n",
       "      <th>social medai &amp; video(hrs)_less than 0 hour</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Male</td>\n",
       "      <td>79.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>40000.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>Female</td>\n",
       "      <td>70.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>15000.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>71.0</td>\n",
       "      <td>61.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>13000.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>Male</td>\n",
       "      <td>40.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>50000.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "      <td>Female</td>\n",
       "      <td>90.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>20000.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 38 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Certification Course  Gender  10th Mark  12th Mark  college mark  \\\n",
       "0                     0    Male       79.0       64.0          80.0   \n",
       "1                     0  Female       70.0       80.0          70.0   \n",
       "2                     1    Male       71.0       61.0          55.0   \n",
       "4                     0    Male       40.0       65.0          30.0   \n",
       "5                     1  Female       90.0       75.0          70.0   \n",
       "\n",
       "   salary expectation  Do you like your degree?  part-time job  \\\n",
       "0             40000.0                         0              0   \n",
       "1             15000.0                         1              0   \n",
       "2             13000.0                         1              0   \n",
       "4             50000.0                         1              0   \n",
       "5             20000.0                         1              0   \n",
       "\n",
       "   Department_B.com ISM  Department_BCA  ...  \\\n",
       "0                 False            True  ...   \n",
       "1                 False            True  ...   \n",
       "2                 False            True  ...   \n",
       "4                 False            True  ...   \n",
       "5                 False            True  ...   \n",
       "\n",
       "   Travelling Time(hrs)_1 - 1.30 hour  Travelling Time(hrs)_1.30 - 2 hour  \\\n",
       "0                               False                               False   \n",
       "1                               False                               False   \n",
       "2                               False                               False   \n",
       "4                               False                               False   \n",
       "5                               False                               False   \n",
       "\n",
       "   Travelling Time(hrs)_2 - 2.30 hour  Travelling Time(hrs)_2.30 - 3 hour  \\\n",
       "0                               False                               False   \n",
       "1                               False                               False   \n",
       "2                               False                               False   \n",
       "4                               False                               False   \n",
       "5                               False                               False   \n",
       "\n",
       "   Travelling Time(hrs)_more than 3 hour  \\\n",
       "0                                  False   \n",
       "1                                  False   \n",
       "2                                  False   \n",
       "4                                  False   \n",
       "5                                  False   \n",
       "\n",
       "   social medai & video(hrs)_0.5 - 1.0 hour  \\\n",
       "0                                     False   \n",
       "1                                     False   \n",
       "2                                     False   \n",
       "4                                     False   \n",
       "5                                      True   \n",
       "\n",
       "   social medai & video(hrs)_1 - 1.30 hour  \\\n",
       "0                                    False   \n",
       "1                                     True   \n",
       "2                                    False   \n",
       "4                                    False   \n",
       "5                                    False   \n",
       "\n",
       "   social medai & video(hrs)_1.30 - 2 hour  \\\n",
       "0                                     True   \n",
       "1                                    False   \n",
       "2                                    False   \n",
       "4                                     True   \n",
       "5                                    False   \n",
       "\n",
       "   social medai & video(hrs)_More than 2 hour  \\\n",
       "0                                       False   \n",
       "1                                       False   \n",
       "2                                        True   \n",
       "4                                       False   \n",
       "5                                       False   \n",
       "\n",
       "   social medai & video(hrs)_less than 0 hour  \n",
       "0                                       False  \n",
       "1                                       False  \n",
       "2                                       False  \n",
       "4                                       False  \n",
       "5                                       False  \n",
       "\n",
       "[5 rows x 38 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "afe6c8f8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:19.113903Z",
     "iopub.status.busy": "2024-06-02T10:33:19.113656Z",
     "iopub.status.idle": "2024-06-02T10:33:19.139909Z",
     "shell.execute_reply": "2024-06-02T10:33:19.138822Z"
    },
    "papermill": {
     "duration": 0.057891,
     "end_time": "2024-06-02T10:33:19.141906",
     "exception": false,
     "start_time": "2024-06-02T10:33:19.084015",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 232 entries, 0 to 234\n",
      "Data columns (total 38 columns):\n",
      " #   Column                                      Non-Null Count  Dtype  \n",
      "---  ------                                      --------------  -----  \n",
      " 0   Certification Course                        232 non-null    int64  \n",
      " 1   Gender                                      232 non-null    int64  \n",
      " 2   10th Mark                                   232 non-null    float64\n",
      " 3   12th Mark                                   232 non-null    float64\n",
      " 4   college mark                                232 non-null    float64\n",
      " 5   salary expectation                          223 non-null    float64\n",
      " 6   Do you like your degree?                    232 non-null    int64  \n",
      " 7   part-time job                               232 non-null    int64  \n",
      " 8   Department_B.com ISM                        232 non-null    int64  \n",
      " 9   Department_BCA                              232 non-null    int64  \n",
      " 10  Department_Commerce                         232 non-null    int64  \n",
      " 11  hobbies_Reading books                       232 non-null    int64  \n",
      " 12  hobbies_Sports                              232 non-null    int64  \n",
      " 13  hobbies_Video Games                         232 non-null    int64  \n",
      " 14  prefer to study in_Morning                  232 non-null    int64  \n",
      " 15  prefer to study in_Night                    232 non-null    int64  \n",
      " 16  Stress Level_Bad                            232 non-null    int64  \n",
      " 17  Stress Level_Good                           232 non-null    int64  \n",
      " 18  Stress Level_fabulous                       232 non-null    int64  \n",
      " 19  Financial Status_Bad                        232 non-null    int64  \n",
      " 20  Financial Status_Fabulous                   232 non-null    int64  \n",
      " 21  Financial Status_good                       232 non-null    int64  \n",
      " 22  daily studing time(hrs)_0.5 - 1.0 hour      232 non-null    int64  \n",
      " 23  daily studing time(hrs)_1 - 2 Hour          232 non-null    int64  \n",
      " 24  daily studing time(hrs)_2 - 3 hour          232 non-null    int64  \n",
      " 25  daily studing time(hrs)_3 - 4 hour          232 non-null    int64  \n",
      " 26  daily studing time(hrs)_More Than 4 hour    232 non-null    int64  \n",
      " 27  Travelling Time(hrs)_0.5 - 1.0 hour         232 non-null    int64  \n",
      " 28  Travelling Time(hrs)_1 - 1.30 hour          232 non-null    int64  \n",
      " 29  Travelling Time(hrs)_1.30 - 2 hour          232 non-null    int64  \n",
      " 30  Travelling Time(hrs)_2 - 2.30 hour          232 non-null    int64  \n",
      " 31  Travelling Time(hrs)_2.30 - 3 hour          232 non-null    int64  \n",
      " 32  Travelling Time(hrs)_more than 3 hour       232 non-null    int64  \n",
      " 33  social medai & video(hrs)_0.5 - 1.0 hour    232 non-null    int64  \n",
      " 34  social medai & video(hrs)_1 - 1.30 hour     232 non-null    int64  \n",
      " 35  social medai & video(hrs)_1.30 - 2 hour     232 non-null    int64  \n",
      " 36  social medai & video(hrs)_More than 2 hour  232 non-null    int64  \n",
      " 37  social medai & video(hrs)_less than 0 hour  232 non-null    int64  \n",
      "dtypes: float64(4), int64(34)\n",
      "memory usage: 70.7 KB\n"
     ]
    }
   ],
   "source": [
    "X  = X.replace({True:1, False:0})\n",
    "X['Gender'] = X['Gender'].replace({'Male':1,'Female':0})\n",
    "X.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1ee1641d",
   "metadata": {
    "papermill": {
     "duration": 0.028429,
     "end_time": "2024-06-02T10:33:19.200301",
     "exception": false,
     "start_time": "2024-06-02T10:33:19.171872",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### spliting the Data in training and test set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "965f5817",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:19.258752Z",
     "iopub.status.busy": "2024-06-02T10:33:19.258490Z",
     "iopub.status.idle": "2024-06-02T10:33:19.457533Z",
     "shell.execute_reply": "2024-06-02T10:33:19.456640Z"
    },
    "papermill": {
     "duration": 0.230718,
     "end_time": "2024-06-02T10:33:19.459751",
     "exception": false,
     "start_time": "2024-06-02T10:33:19.229033",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "X_train:  (162, 38)\n",
      "X_test:  (70, 38)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.preprocessing import MinMaxScaler\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "# y = X['college mark']\n",
    "# X_Train = X.drop(['college mark'], axis=1)\n",
    "\n",
    "X_train, X_test = train_test_split(X, train_size=0.7, random_state=100)\n",
    "print(\"X_train: \", X_train.shape)\n",
    "print(\"X_test: \", X_test.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "35fa3831",
   "metadata": {
    "papermill": {
     "duration": 0.028753,
     "end_time": "2024-06-02T10:33:19.518784",
     "exception": false,
     "start_time": "2024-06-02T10:33:19.490031",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### scaling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "29228f96",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:19.578131Z",
     "iopub.status.busy": "2024-06-02T10:33:19.577816Z",
     "iopub.status.idle": "2024-06-02T10:33:19.610642Z",
     "shell.execute_reply": "2024-06-02T10:33:19.609763Z"
    },
    "papermill": {
     "duration": 0.065071,
     "end_time": "2024-06-02T10:33:19.612681",
     "exception": false,
     "start_time": "2024-06-02T10:33:19.547610",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Certification Course</th>\n",
       "      <th>Gender</th>\n",
       "      <th>10th Mark</th>\n",
       "      <th>12th Mark</th>\n",
       "      <th>college mark</th>\n",
       "      <th>salary expectation</th>\n",
       "      <th>Do you like your degree?</th>\n",
       "      <th>part-time job</th>\n",
       "      <th>Department_B.com ISM</th>\n",
       "      <th>Department_BCA</th>\n",
       "      <th>...</th>\n",
       "      <th>Travelling Time(hrs)_1 - 1.30 hour</th>\n",
       "      <th>Travelling Time(hrs)_1.30 - 2 hour</th>\n",
       "      <th>Travelling Time(hrs)_2 - 2.30 hour</th>\n",
       "      <th>Travelling Time(hrs)_2.30 - 3 hour</th>\n",
       "      <th>Travelling Time(hrs)_more than 3 hour</th>\n",
       "      <th>social medai &amp; video(hrs)_0.5 - 1.0 hour</th>\n",
       "      <th>social medai &amp; video(hrs)_1 - 1.30 hour</th>\n",
       "      <th>social medai &amp; video(hrs)_1.30 - 2 hour</th>\n",
       "      <th>social medai &amp; video(hrs)_More than 2 hour</th>\n",
       "      <th>social medai &amp; video(hrs)_less than 0 hour</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.714612</td>\n",
       "      <td>0.306122</td>\n",
       "      <td>0.484536</td>\n",
       "      <td>0.304348</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.897260</td>\n",
       "      <td>0.836735</td>\n",
       "      <td>0.886598</td>\n",
       "      <td>0.130435</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.922374</td>\n",
       "      <td>0.459184</td>\n",
       "      <td>0.587629</td>\n",
       "      <td>0.130435</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.988584</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.793814</td>\n",
       "      <td>0.086957</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.805936</td>\n",
       "      <td>0.265306</td>\n",
       "      <td>0.680412</td>\n",
       "      <td>0.060870</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 38 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Certification Course  Gender  10th Mark  12th Mark  college mark  \\\n",
       "0                   1.0     1.0   0.714612   0.306122      0.484536   \n",
       "1                   0.0     1.0   0.897260   0.836735      0.886598   \n",
       "2                   0.0     1.0   0.922374   0.459184      0.587629   \n",
       "3                   0.0     0.0   0.988584   1.000000      0.793814   \n",
       "4                   1.0     1.0   0.805936   0.265306      0.680412   \n",
       "\n",
       "   salary expectation  Do you like your degree?  part-time job  \\\n",
       "0            0.304348                       1.0            0.0   \n",
       "1            0.130435                       1.0            0.0   \n",
       "2            0.130435                       1.0            0.0   \n",
       "3            0.086957                       1.0            0.0   \n",
       "4            0.060870                       0.0            0.0   \n",
       "\n",
       "   Department_B.com ISM  Department_BCA  ...  \\\n",
       "0                   1.0             0.0  ...   \n",
       "1                   1.0             0.0  ...   \n",
       "2                   0.0             1.0  ...   \n",
       "3                   0.0             1.0  ...   \n",
       "4                   0.0             1.0  ...   \n",
       "\n",
       "   Travelling Time(hrs)_1 - 1.30 hour  Travelling Time(hrs)_1.30 - 2 hour  \\\n",
       "0                                 0.0                                 0.0   \n",
       "1                                 1.0                                 0.0   \n",
       "2                                 1.0                                 0.0   \n",
       "3                                 0.0                                 0.0   \n",
       "4                                 0.0                                 0.0   \n",
       "\n",
       "   Travelling Time(hrs)_2 - 2.30 hour  Travelling Time(hrs)_2.30 - 3 hour  \\\n",
       "0                                 0.0                                 0.0   \n",
       "1                                 0.0                                 0.0   \n",
       "2                                 0.0                                 0.0   \n",
       "3                                 0.0                                 0.0   \n",
       "4                                 0.0                                 0.0   \n",
       "\n",
       "   Travelling Time(hrs)_more than 3 hour  \\\n",
       "0                                    1.0   \n",
       "1                                    0.0   \n",
       "2                                    0.0   \n",
       "3                                    0.0   \n",
       "4                                    0.0   \n",
       "\n",
       "   social medai & video(hrs)_0.5 - 1.0 hour  \\\n",
       "0                                       0.0   \n",
       "1                                       0.0   \n",
       "2                                       0.0   \n",
       "3                                       0.0   \n",
       "4                                       0.0   \n",
       "\n",
       "   social medai & video(hrs)_1 - 1.30 hour  \\\n",
       "0                                      0.0   \n",
       "1                                      1.0   \n",
       "2                                      0.0   \n",
       "3                                      1.0   \n",
       "4                                      0.0   \n",
       "\n",
       "   social medai & video(hrs)_1.30 - 2 hour  \\\n",
       "0                                      0.0   \n",
       "1                                      0.0   \n",
       "2                                      1.0   \n",
       "3                                      0.0   \n",
       "4                                      0.0   \n",
       "\n",
       "   social medai & video(hrs)_More than 2 hour  \\\n",
       "0                                         0.0   \n",
       "1                                         0.0   \n",
       "2                                         0.0   \n",
       "3                                         0.0   \n",
       "4                                         0.0   \n",
       "\n",
       "   social medai & video(hrs)_less than 0 hour  \n",
       "0                                         0.0  \n",
       "1                                         0.0  \n",
       "2                                         0.0  \n",
       "3                                         0.0  \n",
       "4                                         0.0  \n",
       "\n",
       "[5 rows x 38 columns]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scaler = MinMaxScaler()\n",
    "\n",
    "X_train = scaler.fit_transform(X_train)\n",
    "X_train = pd.DataFrame(X_train, columns=X.columns)\n",
    "X_train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "d7187ae3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:19.672922Z",
     "iopub.status.busy": "2024-06-02T10:33:19.672105Z",
     "iopub.status.idle": "2024-06-02T10:33:20.529938Z",
     "shell.execute_reply": "2024-06-02T10:33:20.529042Z"
    },
    "papermill": {
     "duration": 0.890258,
     "end_time": "2024-06-02T10:33:20.532182",
     "exception": false,
     "start_time": "2024-06-02T10:33:19.641924",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x250 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#lets see the correlation of varaibles with each other\n",
    "\n",
    "# var = X_train[['10th Mark','12th Mark','college mark','salary expectation']].corr()\n",
    "sns.pairplot(X_train, x_vars=['10th Mark','12th Mark','salary expectation','Certification Course'], \n",
    "             y_vars=['college mark'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "9727ecb0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:20.593881Z",
     "iopub.status.busy": "2024-06-02T10:33:20.593548Z",
     "iopub.status.idle": "2024-06-02T10:33:20.904076Z",
     "shell.execute_reply": "2024-06-02T10:33:20.903123Z"
    },
    "papermill": {
     "duration": 0.343656,
     "end_time": "2024-06-02T10:33:20.905965",
     "exception": false,
     "start_time": "2024-06-02T10:33:20.562309",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "var = X_train[['10th Mark','12th Mark','college mark','salary expectation']].corr()\n",
    "sns.heatmap(var,annot=True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5136bd86",
   "metadata": {
    "papermill": {
     "duration": 0.030311,
     "end_time": "2024-06-02T10:33:20.967094",
     "exception": false,
     "start_time": "2024-06-02T10:33:20.936783",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### There is some correlation between '10th Mark','12th Mark' and 'college mark'.\n",
    "**We will make two models:**\n",
    "- Model 1st with independent Variables = all the columns\n",
    "- Model 2nd with independent Variables = '10th Mark','12th Mark'\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "638cfec1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:21.029547Z",
     "iopub.status.busy": "2024-06-02T10:33:21.028673Z",
     "iopub.status.idle": "2024-06-02T10:33:22.362601Z",
     "shell.execute_reply": "2024-06-02T10:33:22.361591Z"
    },
    "papermill": {
     "duration": 1.367269,
     "end_time": "2024-06-02T10:33:22.364636",
     "exception": false,
     "start_time": "2024-06-02T10:33:20.997367",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>      <td>college mark</td>   <th>  R-squared:         </th> <td>   0.282</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.273</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   31.28</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Sun, 02 Jun 2024</td> <th>  Prob (F-statistic):</th> <td>3.49e-12</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>10:33:22</td>     <th>  Log-Likelihood:    </th> <td>  101.74</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>   162</td>      <th>  AIC:               </th> <td>  -197.5</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>   159</td>      <th>  BIC:               </th> <td>  -188.2</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     2</td>      <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "      <td></td>         <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>     <td>    0.3525</td> <td>    0.056</td> <td>    6.253</td> <td> 0.000</td> <td>    0.241</td> <td>    0.464</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>10th Mark</th> <td>    0.2928</td> <td>    0.077</td> <td>    3.779</td> <td> 0.000</td> <td>    0.140</td> <td>    0.446</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>12th Mark</th> <td>    0.2385</td> <td>    0.052</td> <td>    4.559</td> <td> 0.000</td> <td>    0.135</td> <td>    0.342</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>98.220</td> <th>  Durbin-Watson:     </th> <td>   2.016</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td> 716.804</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-2.129</td> <th>  Prob(JB):          </th> <td>2.23e-156</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td>12.384</td> <th>  Cond. No.          </th> <td>    12.8</td> \n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:}    &   college mark   & \\textbf{  R-squared:         } &     0.282   \\\\\n",
       "\\textbf{Model:}            &       OLS        & \\textbf{  Adj. R-squared:    } &     0.273   \\\\\n",
       "\\textbf{Method:}           &  Least Squares   & \\textbf{  F-statistic:       } &     31.28   \\\\\n",
       "\\textbf{Date:}             & Sun, 02 Jun 2024 & \\textbf{  Prob (F-statistic):} &  3.49e-12   \\\\\n",
       "\\textbf{Time:}             &     10:33:22     & \\textbf{  Log-Likelihood:    } &    101.74   \\\\\n",
       "\\textbf{No. Observations:} &         162      & \\textbf{  AIC:               } &    -197.5   \\\\\n",
       "\\textbf{Df Residuals:}     &         159      & \\textbf{  BIC:               } &    -188.2   \\\\\n",
       "\\textbf{Df Model:}         &           2      & \\textbf{                     } &             \\\\\n",
       "\\textbf{Covariance Type:}  &    nonrobust     & \\textbf{                     } &             \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "                   & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{const}     &       0.3525  &        0.056     &     6.253  &         0.000        &        0.241    &        0.464     \\\\\n",
       "\\textbf{10th Mark} &       0.2928  &        0.077     &     3.779  &         0.000        &        0.140    &        0.446     \\\\\n",
       "\\textbf{12th Mark} &       0.2385  &        0.052     &     4.559  &         0.000        &        0.135    &        0.342     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lclc}\n",
       "\\textbf{Omnibus:}       & 98.220 & \\textbf{  Durbin-Watson:     } &     2.016  \\\\\n",
       "\\textbf{Prob(Omnibus):} &  0.000 & \\textbf{  Jarque-Bera (JB):  } &   716.804  \\\\\n",
       "\\textbf{Skew:}          & -2.129 & \\textbf{  Prob(JB):          } & 2.23e-156  \\\\\n",
       "\\textbf{Kurtosis:}      & 12.384 & \\textbf{  Cond. No.          } &      12.8  \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{OLS Regression Results}\n",
       "\\end{center}\n",
       "\n",
       "Notes: \\newline\n",
       " [1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:           college mark   R-squared:                       0.282\n",
       "Model:                            OLS   Adj. R-squared:                  0.273\n",
       "Method:                 Least Squares   F-statistic:                     31.28\n",
       "Date:                Sun, 02 Jun 2024   Prob (F-statistic):           3.49e-12\n",
       "Time:                        10:33:22   Log-Likelihood:                 101.74\n",
       "No. Observations:                 162   AIC:                            -197.5\n",
       "Df Residuals:                     159   BIC:                            -188.2\n",
       "Df Model:                           2                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "==============================================================================\n",
       "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const          0.3525      0.056      6.253      0.000       0.241       0.464\n",
       "10th Mark      0.2928      0.077      3.779      0.000       0.140       0.446\n",
       "12th Mark      0.2385      0.052      4.559      0.000       0.135       0.342\n",
       "==============================================================================\n",
       "Omnibus:                       98.220   Durbin-Watson:                   2.016\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              716.804\n",
       "Skew:                          -2.129   Prob(JB):                    2.23e-156\n",
       "Kurtosis:                      12.384   Cond. No.                         12.8\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "\"\"\""
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Model 1\n",
    "import statsmodels.api as sm\n",
    "\n",
    "X_model1 = X_train[['10th Mark','12th Mark']]\n",
    "y_model1 = X_train['college mark']\n",
    "\n",
    "X_model1 = sm.add_constant(X_model1)\n",
    "lr_model1 = sm.OLS(y_model1, X_model1)\n",
    "sm_model = lr_model1.fit()\n",
    "\n",
    "sm_model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "b182434b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:22.435803Z",
     "iopub.status.busy": "2024-06-02T10:33:22.435303Z",
     "iopub.status.idle": "2024-06-02T10:33:22.620837Z",
     "shell.execute_reply": "2024-06-02T10:33:22.619988Z"
    },
    "papermill": {
     "duration": 0.226397,
     "end_time": "2024-06-02T10:33:22.622936",
     "exception": false,
     "start_time": "2024-06-02T10:33:22.396539",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[('Certification Course', False, 20),\n",
       " ('Gender', False, 4),\n",
       " ('10th Mark', True, 1),\n",
       " ('12th Mark', True, 1),\n",
       " ('salary expectation', True, 1),\n",
       " ('Do you like your degree?', True, 1),\n",
       " ('part-time job', False, 9),\n",
       " ('Department_B.com ISM', True, 1),\n",
       " ('Department_BCA', False, 16),\n",
       " ('Department_Commerce', False, 15),\n",
       " ('hobbies_Reading books', False, 3),\n",
       " ('hobbies_Sports', False, 25),\n",
       " ('hobbies_Video Games', False, 18),\n",
       " ('prefer to study in_Morning', True, 1),\n",
       " ('prefer to study in_Night', False, 10),\n",
       " ('Stress Level_Bad', False, 11),\n",
       " ('Stress Level_Good', False, 12),\n",
       " ('Stress Level_fabulous', True, 1),\n",
       " ('Financial Status_Bad', True, 1),\n",
       " ('Financial Status_Fabulous', True, 1),\n",
       " ('Financial Status_good', True, 1),\n",
       " ('daily studing time(hrs)_0.5 - 1.0 hour', False, 17),\n",
       " ('daily studing time(hrs)_1 - 2 Hour', False, 23),\n",
       " ('daily studing time(hrs)_2 - 3 hour', False, 22),\n",
       " ('daily studing time(hrs)_3 - 4 hour', True, 1),\n",
       " ('daily studing time(hrs)_More Than 4 hour', True, 1),\n",
       " ('Travelling Time(hrs)_0.5 - 1.0 hour', False, 2),\n",
       " ('Travelling Time(hrs)_1 - 1.30 hour', False, 13),\n",
       " ('Travelling Time(hrs)_1.30 - 2 hour', False, 19),\n",
       " ('Travelling Time(hrs)_2 - 2.30 hour', False, 21),\n",
       " ('Travelling Time(hrs)_2.30 - 3 hour', False, 24),\n",
       " ('Travelling Time(hrs)_more than 3 hour', False, 14),\n",
       " ('social medai & video(hrs)_0.5 - 1.0 hour', False, 8),\n",
       " ('social medai & video(hrs)_1 - 1.30 hour', False, 6),\n",
       " ('social medai & video(hrs)_1.30 - 2 hour', False, 26),\n",
       " ('social medai & video(hrs)_More than 2 hour', False, 7),\n",
       " ('social medai & video(hrs)_less than 0 hour', False, 5)]"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#feature selection\n",
    "from sklearn.feature_selection import RFE\n",
    "from sklearn.linear_model import LinearRegression\n",
    "\n",
    "y_model2 = X_train['college mark']\n",
    "X_model2 = X_train.drop(['college mark'], axis=1)\n",
    "X_model2['salary expectation'].fillna(X_model2['salary expectation'].mode()[0], inplace=True)\n",
    "\n",
    "#RFE for feature elemination\n",
    "lr = LinearRegression()\n",
    "rfe = RFE(estimator=lr, n_features_to_select=12)\n",
    "rfe_model = rfe.fit(X_model2, y_model2)\n",
    "list(zip(X_model2.columns, rfe_model.support_, rfe_model.ranking_))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "cda082e2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:22.686048Z",
     "iopub.status.busy": "2024-06-02T10:33:22.685750Z",
     "iopub.status.idle": "2024-06-02T10:33:22.731702Z",
     "shell.execute_reply": "2024-06-02T10:33:22.730730Z"
    },
    "papermill": {
     "duration": 0.079689,
     "end_time": "2024-06-02T10:33:22.733742",
     "exception": false,
     "start_time": "2024-06-02T10:33:22.654053",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>      <td>college mark</td>   <th>  R-squared:         </th> <td>   0.386</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.336</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   7.801</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Sun, 02 Jun 2024</td> <th>  Prob (F-statistic):</th> <td>3.73e-11</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>10:33:22</td>     <th>  Log-Likelihood:    </th> <td>  114.35</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>   162</td>      <th>  AIC:               </th> <td>  -202.7</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>   149</td>      <th>  BIC:               </th> <td>  -162.6</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>    12</td>      <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "                      <td></td>                        <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>                                    <td>    0.3415</td> <td>    0.079</td> <td>    4.315</td> <td> 0.000</td> <td>    0.185</td> <td>    0.498</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>10th Mark</th>                                <td>    0.2578</td> <td>    0.080</td> <td>    3.231</td> <td> 0.002</td> <td>    0.100</td> <td>    0.415</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>12th Mark</th>                                <td>    0.2452</td> <td>    0.051</td> <td>    4.811</td> <td> 0.000</td> <td>    0.144</td> <td>    0.346</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>salary expectation</th>                       <td>    0.0565</td> <td>    0.083</td> <td>    0.679</td> <td> 0.498</td> <td>   -0.108</td> <td>    0.221</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Do you like your degree?</th>                 <td>    0.1047</td> <td>    0.037</td> <td>    2.859</td> <td> 0.005</td> <td>    0.032</td> <td>    0.177</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Department_B.com ISM</th>                     <td>   -0.0480</td> <td>    0.036</td> <td>   -1.322</td> <td> 0.188</td> <td>   -0.120</td> <td>    0.024</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>prefer to study in_Morning</th>               <td>   -0.0511</td> <td>    0.022</td> <td>   -2.344</td> <td> 0.020</td> <td>   -0.094</td> <td>   -0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Stress Level_fabulous</th>                    <td>    0.0802</td> <td>    0.046</td> <td>    1.739</td> <td> 0.084</td> <td>   -0.011</td> <td>    0.171</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Financial Status_Bad</th>                     <td>   -0.0629</td> <td>    0.045</td> <td>   -1.383</td> <td> 0.169</td> <td>   -0.153</td> <td>    0.027</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Financial Status_Fabulous</th>                <td>   -0.0956</td> <td>    0.085</td> <td>   -1.131</td> <td> 0.260</td> <td>   -0.263</td> <td>    0.071</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Financial Status_good</th>                    <td>   -0.0492</td> <td>    0.046</td> <td>   -1.080</td> <td> 0.282</td> <td>   -0.139</td> <td>    0.041</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>daily studing time(hrs)_3 - 4 hour</th>       <td>    0.0603</td> <td>    0.044</td> <td>    1.380</td> <td> 0.170</td> <td>   -0.026</td> <td>    0.147</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>daily studing time(hrs)_More Than 4 hour</th> <td>   -0.0838</td> <td>    0.054</td> <td>   -1.556</td> <td> 0.122</td> <td>   -0.190</td> <td>    0.023</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>64.100</td> <th>  Durbin-Watson:     </th> <td>   2.118</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td> 299.996</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-1.388</td> <th>  Prob(JB):          </th> <td>7.19e-66</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 9.061</td> <th>  Cond. No.          </th> <td>    20.4</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:}                            &   college mark   & \\textbf{  R-squared:         } &     0.386   \\\\\n",
       "\\textbf{Model:}                                    &       OLS        & \\textbf{  Adj. R-squared:    } &     0.336   \\\\\n",
       "\\textbf{Method:}                                   &  Least Squares   & \\textbf{  F-statistic:       } &     7.801   \\\\\n",
       "\\textbf{Date:}                                     & Sun, 02 Jun 2024 & \\textbf{  Prob (F-statistic):} &  3.73e-11   \\\\\n",
       "\\textbf{Time:}                                     &     10:33:22     & \\textbf{  Log-Likelihood:    } &    114.35   \\\\\n",
       "\\textbf{No. Observations:}                         &         162      & \\textbf{  AIC:               } &    -202.7   \\\\\n",
       "\\textbf{Df Residuals:}                             &         149      & \\textbf{  BIC:               } &    -162.6   \\\\\n",
       "\\textbf{Df Model:}                                 &          12      & \\textbf{                     } &             \\\\\n",
       "\\textbf{Covariance Type:}                          &    nonrobust     & \\textbf{                     } &             \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "                                                   & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{const}                                     &       0.3415  &        0.079     &     4.315  &         0.000        &        0.185    &        0.498     \\\\\n",
       "\\textbf{10th Mark}                                 &       0.2578  &        0.080     &     3.231  &         0.002        &        0.100    &        0.415     \\\\\n",
       "\\textbf{12th Mark}                                 &       0.2452  &        0.051     &     4.811  &         0.000        &        0.144    &        0.346     \\\\\n",
       "\\textbf{salary expectation}                        &       0.0565  &        0.083     &     0.679  &         0.498        &       -0.108    &        0.221     \\\\\n",
       "\\textbf{Do you like your degree?}                  &       0.1047  &        0.037     &     2.859  &         0.005        &        0.032    &        0.177     \\\\\n",
       "\\textbf{Department\\_B.com ISM}                     &      -0.0480  &        0.036     &    -1.322  &         0.188        &       -0.120    &        0.024     \\\\\n",
       "\\textbf{prefer to study in\\_Morning}               &      -0.0511  &        0.022     &    -2.344  &         0.020        &       -0.094    &       -0.008     \\\\\n",
       "\\textbf{Stress Level\\_fabulous}                    &       0.0802  &        0.046     &     1.739  &         0.084        &       -0.011    &        0.171     \\\\\n",
       "\\textbf{Financial Status\\_Bad}                     &      -0.0629  &        0.045     &    -1.383  &         0.169        &       -0.153    &        0.027     \\\\\n",
       "\\textbf{Financial Status\\_Fabulous}                &      -0.0956  &        0.085     &    -1.131  &         0.260        &       -0.263    &        0.071     \\\\\n",
       "\\textbf{Financial Status\\_good}                    &      -0.0492  &        0.046     &    -1.080  &         0.282        &       -0.139    &        0.041     \\\\\n",
       "\\textbf{daily studing time(hrs)\\_3 - 4 hour}       &       0.0603  &        0.044     &     1.380  &         0.170        &       -0.026    &        0.147     \\\\\n",
       "\\textbf{daily studing time(hrs)\\_More Than 4 hour} &      -0.0838  &        0.054     &    -1.556  &         0.122        &       -0.190    &        0.023     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lclc}\n",
       "\\textbf{Omnibus:}       & 64.100 & \\textbf{  Durbin-Watson:     } &    2.118  \\\\\n",
       "\\textbf{Prob(Omnibus):} &  0.000 & \\textbf{  Jarque-Bera (JB):  } &  299.996  \\\\\n",
       "\\textbf{Skew:}          & -1.388 & \\textbf{  Prob(JB):          } & 7.19e-66  \\\\\n",
       "\\textbf{Kurtosis:}      &  9.061 & \\textbf{  Cond. No.          } &     20.4  \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{OLS Regression Results}\n",
       "\\end{center}\n",
       "\n",
       "Notes: \\newline\n",
       " [1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:           college mark   R-squared:                       0.386\n",
       "Model:                            OLS   Adj. R-squared:                  0.336\n",
       "Method:                 Least Squares   F-statistic:                     7.801\n",
       "Date:                Sun, 02 Jun 2024   Prob (F-statistic):           3.73e-11\n",
       "Time:                        10:33:22   Log-Likelihood:                 114.35\n",
       "No. Observations:                 162   AIC:                            -202.7\n",
       "Df Residuals:                     149   BIC:                            -162.6\n",
       "Df Model:                          12                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "============================================================================================================\n",
       "                                               coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------------------------------------\n",
       "const                                        0.3415      0.079      4.315      0.000       0.185       0.498\n",
       "10th Mark                                    0.2578      0.080      3.231      0.002       0.100       0.415\n",
       "12th Mark                                    0.2452      0.051      4.811      0.000       0.144       0.346\n",
       "salary expectation                           0.0565      0.083      0.679      0.498      -0.108       0.221\n",
       "Do you like your degree?                     0.1047      0.037      2.859      0.005       0.032       0.177\n",
       "Department_B.com ISM                        -0.0480      0.036     -1.322      0.188      -0.120       0.024\n",
       "prefer to study in_Morning                  -0.0511      0.022     -2.344      0.020      -0.094      -0.008\n",
       "Stress Level_fabulous                        0.0802      0.046      1.739      0.084      -0.011       0.171\n",
       "Financial Status_Bad                        -0.0629      0.045     -1.383      0.169      -0.153       0.027\n",
       "Financial Status_Fabulous                   -0.0956      0.085     -1.131      0.260      -0.263       0.071\n",
       "Financial Status_good                       -0.0492      0.046     -1.080      0.282      -0.139       0.041\n",
       "daily studing time(hrs)_3 - 4 hour           0.0603      0.044      1.380      0.170      -0.026       0.147\n",
       "daily studing time(hrs)_More Than 4 hour    -0.0838      0.054     -1.556      0.122      -0.190       0.023\n",
       "==============================================================================\n",
       "Omnibus:                       64.100   Durbin-Watson:                   2.118\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              299.996\n",
       "Skew:                          -1.388   Prob(JB):                     7.19e-66\n",
       "Kurtosis:                       9.061   Cond. No.                         20.4\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "\"\"\""
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#model2\n",
    "col = X_model2.columns[rfe_model.support_]\n",
    "\n",
    "X_model2 = X_model2[col]\n",
    "\n",
    "X_model2 = sm.add_constant(X_model2)\n",
    "lr_model2 = sm.OLS(y_model2, X_model2)\n",
    "sm_model = lr_model2.fit()\n",
    "\n",
    "sm_model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "9ca4ca21",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:22.798679Z",
     "iopub.status.busy": "2024-06-02T10:33:22.798123Z",
     "iopub.status.idle": "2024-06-02T10:33:22.827906Z",
     "shell.execute_reply": "2024-06-02T10:33:22.826974Z"
    },
    "papermill": {
     "duration": 0.064492,
     "end_time": "2024-06-02T10:33:22.829789",
     "exception": false,
     "start_time": "2024-06-02T10:33:22.765297",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>features</th>\n",
       "      <th>VIF</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>const</td>\n",
       "      <td>65.407192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10th Mark</td>\n",
       "      <td>1.443890</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>12th Mark</td>\n",
       "      <td>1.292277</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>salary expectation</td>\n",
       "      <td>1.053793</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Do you like your degree?</td>\n",
       "      <td>1.106973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Department_B.com ISM</td>\n",
       "      <td>1.158525</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>prefer to study in_Morning</td>\n",
       "      <td>1.045157</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Stress Level_fabulous</td>\n",
       "      <td>1.043072</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Financial Status_Bad</td>\n",
       "      <td>5.210576</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Financial Status_Fabulous</td>\n",
       "      <td>1.355496</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Financial Status_good</td>\n",
       "      <td>5.413240</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>daily studing time(hrs)_3 - 4 hour</td>\n",
       "      <td>1.045593</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>daily studing time(hrs)_More Than 4 hour</td>\n",
       "      <td>1.080529</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                    features        VIF\n",
       "0                                      const  65.407192\n",
       "1                                  10th Mark   1.443890\n",
       "2                                  12th Mark   1.292277\n",
       "3                         salary expectation   1.053793\n",
       "4                   Do you like your degree?   1.106973\n",
       "5                       Department_B.com ISM   1.158525\n",
       "6                 prefer to study in_Morning   1.045157\n",
       "7                      Stress Level_fabulous   1.043072\n",
       "8                       Financial Status_Bad   5.210576\n",
       "9                  Financial Status_Fabulous   1.355496\n",
       "10                     Financial Status_good   5.413240\n",
       "11        daily studing time(hrs)_3 - 4 hour   1.045593\n",
       "12  daily studing time(hrs)_More Than 4 hour   1.080529"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#VIF\n",
    "from statsmodels.stats.outliers_influence import variance_inflation_factor\n",
    "\n",
    "VIF = pd.DataFrame()\n",
    "VIF['features'] = X_model2.columns\n",
    "VIF['VIF'] = [variance_inflation_factor(X_model2, x) for x in range(X_model2.shape[1])]\n",
    "VIF"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9efc3f74",
   "metadata": {
    "papermill": {
     "duration": 0.031497,
     "end_time": "2024-06-02T10:33:22.893653",
     "exception": false,
     "start_time": "2024-06-02T10:33:22.862156",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "we will remove __'salary expectation','Financial Status_Bad','Financial Status_good'__ because there p-value is high."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "84cb6cbb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:22.957737Z",
     "iopub.status.busy": "2024-06-02T10:33:22.957408Z",
     "iopub.status.idle": "2024-06-02T10:33:22.963863Z",
     "shell.execute_reply": "2024-06-02T10:33:22.962924Z"
    },
    "papermill": {
     "duration": 0.040847,
     "end_time": "2024-06-02T10:33:22.965702",
     "exception": false,
     "start_time": "2024-06-02T10:33:22.924855",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['10th Mark',\n",
       " '12th Mark',\n",
       " 'Do you like your degree?',\n",
       " 'Department_B.com ISM',\n",
       " 'prefer to study in_Morning',\n",
       " 'Stress Level_fabulous',\n",
       " 'Financial Status_Fabulous',\n",
       " 'daily studing time(hrs)_3 - 4 hour',\n",
       " 'daily studing time(hrs)_More Than 4 hour']"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "items = ['salary expectation','Financial Status_Bad','Financial Status_good']\n",
    "col = list(col)\n",
    "\n",
    "col = [x for x in col if x not in items]\n",
    "col"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "ed2d6bd8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T10:33:23.034165Z",
     "iopub.status.busy": "2024-06-02T10:33:23.033644Z",
     "iopub.status.idle": "2024-06-02T10:33:23.078745Z",
     "shell.execute_reply": "2024-06-02T10:33:23.077557Z"
    },
    "papermill": {
     "duration": 0.080254,
     "end_time": "2024-06-02T10:33:23.081373",
     "exception": false,
     "start_time": "2024-06-02T10:33:23.001119",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>      <td>college mark</td>   <th>  R-squared:         </th> <td>   0.375</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.338</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   10.15</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Sun, 02 Jun 2024</td> <th>  Prob (F-statistic):</th> <td>3.78e-12</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>10:33:23</td>     <th>  Log-Likelihood:    </th> <td>  112.97</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>   162</td>      <th>  AIC:               </th> <td>  -205.9</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>   152</td>      <th>  BIC:               </th> <td>  -175.1</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     9</td>      <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "                      <td></td>                        <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>                                    <td>    0.3008</td> <td>    0.071</td> <td>    4.233</td> <td> 0.000</td> <td>    0.160</td> <td>    0.441</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>10th Mark</th>                                <td>    0.2646</td> <td>    0.079</td> <td>    3.345</td> <td> 0.001</td> <td>    0.108</td> <td>    0.421</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>12th Mark</th>                                <td>    0.2404</td> <td>    0.051</td> <td>    4.749</td> <td> 0.000</td> <td>    0.140</td> <td>    0.340</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Do you like your degree?</th>                 <td>    0.0982</td> <td>    0.035</td> <td>    2.779</td> <td> 0.006</td> <td>    0.028</td> <td>    0.168</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Department_B.com ISM</th>                     <td>   -0.0484</td> <td>    0.036</td> <td>   -1.336</td> <td> 0.184</td> <td>   -0.120</td> <td>    0.023</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>prefer to study in_Morning</th>               <td>   -0.0514</td> <td>    0.022</td> <td>   -2.373</td> <td> 0.019</td> <td>   -0.094</td> <td>   -0.009</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Stress Level_fabulous</th>                    <td>    0.0863</td> <td>    0.046</td> <td>    1.886</td> <td> 0.061</td> <td>   -0.004</td> <td>    0.177</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Financial Status_Fabulous</th>                <td>   -0.0442</td> <td>    0.073</td> <td>   -0.605</td> <td> 0.546</td> <td>   -0.188</td> <td>    0.100</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>daily studing time(hrs)_3 - 4 hour</th>       <td>    0.0591</td> <td>    0.043</td> <td>    1.368</td> <td> 0.173</td> <td>   -0.026</td> <td>    0.144</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>daily studing time(hrs)_More Than 4 hour</th> <td>   -0.0868</td> <td>    0.053</td> <td>   -1.636</td> <td> 0.104</td> <td>   -0.192</td> <td>    0.018</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>64.315</td> <th>  Durbin-Watson:     </th> <td>   2.081</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td> 294.743</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-1.402</td> <th>  Prob(JB):          </th> <td>9.94e-65</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 8.983</td> <th>  Cond. No.          </th> <td>    17.9</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:}                            &   college mark   & \\textbf{  R-squared:         } &     0.375   \\\\\n",
       "\\textbf{Model:}                                    &       OLS        & \\textbf{  Adj. R-squared:    } &     0.338   \\\\\n",
       "\\textbf{Method:}                                   &  Least Squares   & \\textbf{  F-statistic:       } &     10.15   \\\\\n",
       "\\textbf{Date:}                                     & Sun, 02 Jun 2024 & \\textbf{  Prob (F-statistic):} &  3.78e-12   \\\\\n",
       "\\textbf{Time:}                                     &     10:33:23     & \\textbf{  Log-Likelihood:    } &    112.97   \\\\\n",
       "\\textbf{No. Observations:}                         &         162      & \\textbf{  AIC:               } &    -205.9   \\\\\n",
       "\\textbf{Df Residuals:}                             &         152      & \\textbf{  BIC:               } &    -175.1   \\\\\n",
       "\\textbf{Df Model:}                                 &           9      & \\textbf{                     } &             \\\\\n",
       "\\textbf{Covariance Type:}                          &    nonrobust     & \\textbf{                     } &             \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "                                                   & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{const}                                     &       0.3008  &        0.071     &     4.233  &         0.000        &        0.160    &        0.441     \\\\\n",
       "\\textbf{10th Mark}                                 &       0.2646  &        0.079     &     3.345  &         0.001        &        0.108    &        0.421     \\\\\n",
       "\\textbf{12th Mark}                                 &       0.2404  &        0.051     &     4.749  &         0.000        &        0.140    &        0.340     \\\\\n",
       "\\textbf{Do you like your degree?}                  &       0.0982  &        0.035     &     2.779  &         0.006        &        0.028    &        0.168     \\\\\n",
       "\\textbf{Department\\_B.com ISM}                     &      -0.0484  &        0.036     &    -1.336  &         0.184        &       -0.120    &        0.023     \\\\\n",
       "\\textbf{prefer to study in\\_Morning}               &      -0.0514  &        0.022     &    -2.373  &         0.019        &       -0.094    &       -0.009     \\\\\n",
       "\\textbf{Stress Level\\_fabulous}                    &       0.0863  &        0.046     &     1.886  &         0.061        &       -0.004    &        0.177     \\\\\n",
       "\\textbf{Financial Status\\_Fabulous}                &      -0.0442  &        0.073     &    -0.605  &         0.546        &       -0.188    &        0.100     \\\\\n",
       "\\textbf{daily studing time(hrs)\\_3 - 4 hour}       &       0.0591  &        0.043     &     1.368  &         0.173        &       -0.026    &        0.144     \\\\\n",
       "\\textbf{daily studing time(hrs)\\_More Than 4 hour} &      -0.0868  &        0.053     &    -1.636  &         0.104        &       -0.192    &        0.018     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lclc}\n",
       "\\textbf{Omnibus:}       & 64.315 & \\textbf{  Durbin-Watson:     } &    2.081  \\\\\n",
       "\\textbf{Prob(Omnibus):} &  0.000 & \\textbf{  Jarque-Bera (JB):  } &  294.743  \\\\\n",
       "\\textbf{Skew:}          & -1.402 & \\textbf{  Prob(JB):          } & 9.94e-65  \\\\\n",
       "\\textbf{Kurtosis:}      &  8.983 & \\textbf{  Cond. No.          } &     17.9  \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{OLS Regression Results}\n",
       "\\end{center}\n",
       "\n",
       "Notes: \\newline\n",
       " [1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:           college mark   R-squared:                       0.375\n",
       "Model:                            OLS   Adj. R-squared:                  0.338\n",
       "Method:                 Least Squares   F-statistic:                     10.15\n",
       "Date:                Sun, 02 Jun 2024   Prob (F-statistic):           3.78e-12\n",
       "Time:                        10:33:23   Log-Likelihood:                 112.97\n",
       "No. Observations:                 162   AIC:                            -205.9\n",
       "Df Residuals:                     152   BIC:                            -175.1\n",
       "Df Model:                           9                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "============================================================================================================\n",
       "                                               coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------------------------------------\n",
       "const                                        0.3008      0.071      4.233      0.000       0.160       0.441\n",
       "10th Mark                                    0.2646      0.079      3.345      0.001       0.108       0.421\n",
       "12th Mark                                    0.2404      0.051      4.749      0.000       0.140       0.340\n",
       "Do you like your degree?                     0.0982      0.035      2.779      0.006       0.028       0.168\n",
       "Department_B.com ISM                        -0.0484      0.036     -1.336      0.184      -0.120       0.023\n",
       "prefer to study in_Morning                  -0.0514      0.022     -2.373      0.019      -0.094      -0.009\n",
       "Stress Level_fabulous                        0.0863      0.046      1.886      0.061      -0.004       0.177\n",
       "Financial Status_Fabulous                   -0.0442      0.073     -0.605      0.546      -0.188       0.100\n",
       "daily studing time(hrs)_3 - 4 hour           0.0591      0.043      1.368      0.173      -0.026       0.144\n",
       "daily studing time(hrs)_More Than 4 hour    -0.0868      0.053     -1.636      0.104      -0.192       0.018\n",
       "==============================================================================\n",
       "Omnibus:                       64.315   Durbin-Watson:                   2.081\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              294.743\n",
       "Skew:                          -1.402   Prob(JB):                     9.94e-65\n",
       "Kurtosis:                       8.983   Cond. No.                         17.9\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "\"\"\""
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_model2 = X_model2[col]\n",
    "\n",
    "X_model2 = sm.add_constant(X_model2)\n",
    "lr_model2 = sm.OLS(y_model2, X_model2)\n",
    "sm_model = lr_model2.fit()\n",
    "\n",
    "sm_model.summary()"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "gpu",
   "dataSources": [
    {
     "datasetId": 4789302,
     "sourceId": 8108182,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30698,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 19.228095,
   "end_time": "2024-06-02T10:33:23.643046",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-02T10:33:04.414951",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
